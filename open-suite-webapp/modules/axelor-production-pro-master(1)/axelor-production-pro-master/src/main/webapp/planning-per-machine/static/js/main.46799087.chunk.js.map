{"version":3,"sources":["components/InputContainer/InputContainer.js","components/Input/Input.js","services/utils.js","components/ChangeDurationDialog.js","providers/UrlProvider.js","services/RESTService.js","components/Card.js","components/ScrollView.js","components/NativeSelect/style.js","components/NativeSelect/index.js","services/LocalStorageService.js","app/DraftOperationOrder.js","providers/AOSProvider.js","providers/RenderProvider.js","services/AOSRESTService.js","services/schedulerConfig.js","services/schedulerConfigRest.js","components/LoadingIndicator.js","app/App.js","serviceWorker.js","index.js"],"names":["styles","hasLabel","hasError","readOnly","display","flexDirection","position","top","fontSize","lineHeight","color","padding","borderWidth","borderStyle","borderColor","borderRadius","transition","whiteSpace","overflow","textOverflow","width","font","backgroundColor","border","margin","outline","minHeight","minWidth","marginTop","marginLeft","textAlign","InputContainer","forwardRef","ref","children","className","error","disabled","label","required","focus","useCallback","current","cx","css","onClick","displayName","defaultProps","undefined","Input","parentRef","defaultValue","name","onChange","onBlur","value","props","internalRef","useRef","field","Object","keys","length","form","placeholder","type","isEmpty","obj","prop","arrayToObject","array","objectToReturn","forEach","object","id","getCorrectTimeFormat","timing","time","split","formattedTime","parseInt","multiplier","translate","str","window","_t","long_date_template","start","scheduler","templates","day_date","event_date","status","formatDate","date","moment","format","momentToDateTime","toDate","addYearsToDate","dt","n","Date","setFullYear","getFullYear","withStyles","dialogPaper","maxHeight","onValidate","setChangeDurationOpen","validateChangeDuration","validate","Dialog","open","classes","paper","onClose","DialogTitle","reason","e","setReason","target","style","Button","variant","regexStockLocation","regexMachineType","regexMachine","regexWorkCenterGroup","regexEmployee","withUrlParams","WrappedComponent","useState","location","href","url","search","queryString","planningEmployee","setPlanningEmployee","setType","planningViewType","setPlanningViewType","machineId","setMachineId","machineTypeId","setMachineTypeId","stockLocationId","setStockLocationId","workCenterGroupId","setWorkCenterGroupId","employeeId","setEmployeeId","useEffect","URLSearchParams","get","matchStockLocation","exec","matchMachineType","matchMachine","matchWorkCenterGroup","matchEmployee","csrfCookie","cname","ca","decodeURIComponent","document","cookie","i","c","charAt","substring","indexOf","getCookie","headers","Headers","append","RESTService","options","trackPromise","fetch","config","data","assign","method","credentials","mode","body","JSON","stringify","request","entity","record","REST_URL","put","dataSend","post","model","action","datas","ACTION_URL","Card","outlined","boxShadow","ScrollView","height","container","cursor","errorText","errorTextContainer","float","labelContainer","select","boxSizing","background","paddingRight","selectContainer","nativeSelectContainer","alignItems","searchSelectButtonContainer","flexShrink","clearButton","clearButtonContainer","right","editButton","editButtonContainer","input","valueContainer","flexWrap","flex","overflowX","overflowY","noOptionsMessage","singleValue","left","zIndex","divider","Select","state","handleOpen","preventDefault","setState","handleClose","handleChange","event","handleClear","stopPropagation","manageOptions","myOptions","initialValue","map","option","this","canRemove","errorMessage","errorMessages","clearButtonProps","valueFromOption","managedOptions","Fragment","onOpen","MenuItem","key","tabIndex","React","PureComponent","showLabel","LocalStorageService","localStorage","setItem","DATA_ID_BEING_DRAG","getItem","LAST_ACTIVE_MODE","jsonData","parse","LAST_ACTIVE_DATE","item","OPERATION_ORDER_EVENT_COLOR_STORE_KEY","OPEN_STOCK_LOCATION_STORE_KEY","OPEN_MACHINE_TYPE_STORE_KEY","divStyle","toolTipStyle","paddingTop","paddingLeft","paddingBottom","DraftOperationOrder","manufacturingOrderList","operationOrderListLength","draftOperationOrderListLength","renderDraftOperationOrder","onDragend","prodHumanResourceList","models","setModels","filter","setFilter","secondFilter","setSecondFilter","list","workCenterGroupModelList","d","push","timeoutId","setTimeout","clearTimeout","onDragStart","dataTransfer","effectAllowed","setDragDataId","getAttribute","onChangeSearchTypeSelect","evt","setSearchTypeSelect","String","currentTarget","cardList","o","tooltipContent","operationOrder","lines","manufOrder","manufOrderSeq","priority","operationName","realDuration","plannedDuration","isMaintained","product","fullName","clientPartner","statusSelect","qty","bom","prodProcess","productionOrderSet","productionOrders","po","productionOrderSeq","join","saleOrderSet","saleOrders","so","employees","plannedStartDateT","plannedEndDateT","computeTooltipContent","saleOrder","sdsTypeSelect","onDragEnd","draggable","showArrow","activateOn","content","dangerouslySetInnerHTML","__html","headerColor","textColor","materialCode","sdsCode","contentColor","draftTitle","filterTitle","all","marginBottom","checked","searchTypeSelect","NativeSelect","workCenterGroup","v","find","w","setWorkCenterGroup","withMachine","machineList","employeeList","dayPlanningList","renderOperationOrder","manageChangeDuration","workCenterGroupName","renderData","setRenderData","reload","setReload","loading","setLoading","reloadOperations","setReloadOperations","fetchData","a","getAction","secondSearch","res","json","sort","b","oo","isMicroPlanningDone","fetchStaticData","fetchOperationData","machineIds","wc","employeeIds","dhtmlx","alert","text","draftOperations","operations","withRenderOperation","serverLists","serverList","updateOperationOrder","formPayload","getId","then","result","version","update","updateOperationOrderDateAndMachine","startDate","endDate","machineOrEmployeeId","machinePlanning","operationOrderRes","opeationOrderJson","records","operationOrderUpdateRes","operationOrderUpdateJson","updatedRecords","message","oldStartDate","oldEndDate","planOperationOrder","operationOrderId","machineOrEmployeId","workCenterId","machine","workCenter","sdsEmployee","context","initDateFormat","weekDateFormat","date_to_str","formatDateWithoutTime","week_timeline_scale_date","month_timeline_scale_date","getDay","getShortDayName","getDate","calculateDuration","Math","round","end_date","start_date","initDayTimeLine","step","todayDate","currentStep","totalMinutes","getHours","getMinutes","createTimelineView","fit_events","x_unit","x_date","x_step","x_size","x_start","x_length","render","scrollable","column_width","smart_rendering","folder_dy","full_event__dy","event_dy","dy","y_unit","y_property","section_autoheight","resize_events","initWeekTimeLine","folder_events_available","week_timeline_start","week_start","add","initMonthTimeLine","month_timeline_start","month_start","updateParent","parent","slice","createTree","values","cust","machines","serialNumber","localOpenStockLocations","getOpenStockLocations","openStockLocations","element","foundStockLocation","setOpenStockLocations","setLocalOpenStockLocations","localMachineTypes","getOpenMachineTypes","openMachineTypes","foundMachineType","setOpenMachineTypes","setLocalOpenMachineTypes","showAlert","isMaintenanceSpan","isPlanningSpan","onBeforeEventChange","setOnMove","attachEvent","ev","is_new","original","move","checkInMarkedTimespan","getEvent","section_id","updateEvent","getTime","attachEvents","setCurrentMode","setGreySpanList","detachEvents","onSchedulerReady","to_str","hour_scale","onEventDrag","onViewChange","onBeforeViewChange","old_mode","old_date","currentDate","year","month","getMonth","days","matrix","onBeforeLightbox","onBeforeEventCreated","onSchedulerResize","setCurrentView","onBeforeDrag","changeDuration","isPinned","hideQuickInfo","_quick_info_box","icons","icons_select","showQuickInfo","onEventCollision","evs","canProceed","isBlockedSpan","addMaintenanceMarkedSpans","maintenanceRequestList","maintenanceSpanList","equipmentMaintenanceList","maintenanceSpans","actionSelect","requestDate","doneOn","expectedDate","equipementMaintenance","getSection","equipment","zones","sections","timeline","week_timeline","month_timeline","deleteMarkedTimespan","addMarkedTimespan","dates","currDate","startOf","lastDate","diff","clone","enumerateDaysBetweenDates","label_pattern","end","code","replace","prioritySelect","getCss","outsourcing","drop","planResult","planResultJson","flash","dragOver","previousOperation","lastOperationOrder","authorizedMachineIds","timeSpanList","m","includes","newEndDate","realEndDateT","newStartDate","timeSpanId","console","debug","updateView","bottom","usePromiseTracker","promiseInProgress","planningTimeOptions","compose","spanList","setSpanList","setDetachEvents","eventChange","setEventChange","setMaintenanceSpanList","greySpanList","dragging","setDragging","calendar","setCalendar","getActiveMode","currentMode","setStep","changeDurationOpen","changeDurationId","setChangeDurationId","onMove","activeStep","activeDate","getState","initAll","multi_day","xy","scale_height","server_utc","active_link_view","locale","labels","dhx_cal_today_button","week_timeline_tab","month_timeline_tab","minute_timeline_tab","timeline_tab","section_custom","year_tab","details_on_create","details_on_dblclick","dblclick_create","xml_date","limit_time_select","first_hour","last_hour","time_step","container_autoresize","icon_freeze","icon_free","icon_start","icon_end","icon_delete","icon_change_duration","quick_info_detached","initSchedulerConfig","initPlanning","stockLocation","sdsWorkshop","machineType","isNaN","events","detachEvent","event_bar_text","tooltip_text","event_class","label_template","level","picture","initTemplates","spans","week","mac","weekday","weeklyPlanning","weeklyPlann","morningFromZone","morningToZone","afternoonFromZone","afternoonToZone","morningFrom","morningTo","afternoonFrom","afternoonTo","invert_zones","spanId","_click","buttons","freeze","free","initFree","initStart","initEnd","delete","confirm","callback","initToPlan","activeMode","getActiveDate","init","initScheduler","destroyCalendar","newCalendar","renderCalendar","navigation","handler","_mode","linkCalendar","initCalendar","change_duration","initChangeDuration","ts","setActiveDate","setActiveMode","span","myEvent","clearAll","classNamePrefix","param","partnerList","productList","onDrop","action_data","getActionData","setDate","section","eventId","addEvent","deleteEvent","getDragDataId","onDragOver","newDate","setMinutes","setMonth","sdsChangeDuration","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","log","onUpdate","onSuccess","catch","ReactDOM","getElementById","URL","process","origin","addEventListener","response","contentType","ready","unregister","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.46799087.chunk.js","sourcesContent":["import React, { forwardRef, useCallback } from 'react';\nimport * as PropTypes from 'prop-types';\nimport { css, cx } from 'emotion';\n\nconst styles = (hasLabel, hasError, readOnly) => ({\n  display: 'flex',\n  flexDirection: 'column',\n  position: 'relative',\n  '> .error': {\n    position: 'absolute',\n    top: hasLabel ? 50 : 32,\n    fontSize: '0.820rem',\n    lineHeight: '1.15rem',\n    color: 'red',\n    padding: `0 8px`,\n  },\n  '> .input-container': {\n    borderWidth: 1,\n    borderStyle: 'solid',\n    borderColor: '#0288d1',\n    padding: 8,\n    borderRadius: 4,\n    transition: 'all ease-in 0.2s',\n    '> .label-wrapper': {\n      whiteSpace: 'nowrap',\n      overflow: 'hidden',\n      textOverflow: 'ellipsis',\n      fontSize: '0.820rem',\n      lineHeight: '1.15rem',\n      transition: 'color ease-in 0.2s',\n      color: 'grey',\n      '> .indicator': {\n        color: hasError ? 'red' : 'inherit',\n      },\n    },\n    '> .input-wrapper > input, > .input-wrapper > textarea': {\n      width: '100%',\n      font: 'inherit',\n      fontSize: '1rem',\n      lineHeight: '1.4rem',\n      backgroundColor: 'transparent',\n      border: 'none',\n      padding: 0,\n      margin: 0,\n      color: 'black',\n      outline: 'none',\n      textOverflow: 'ellipsis',\n    },\n    '> .input-wrapper': {\n      '.select-value, .input-like': {\n        lineHeight: '1.4rem',\n        minHeight: '1.4rem',\n        outline: 'none',\n        whiteSpace: 'nowrap',\n        textOverflow: 'ellipsis',\n        overflow: 'hidden',\n        color: 'black',\n      },\n    },\n  },\n  width: \"87%\",\n  overflow: \"hidden\",\n  minWidth: \"80px\",\n  minHeight: 64,\n  borderRadius: 4,\n  marginTop: '5%',\n  marginLeft: \"5%\",\n  textAlign: 'center'\n});\n\nconst InputContainer = forwardRef(\n  ({ children, className, disabled, error, label, readOnly, required }, ref) => {\n    const readonly = disabled || readOnly;\n    const hasError = !!error;\n\n    const focus = useCallback(() => {\n      ref && ref.current.focus();\n    }, [ref]);\n\n    return (\n      <div\n        className={cx(css(styles(!!label, hasError, readonly)), className)}\n        onClick={focus}\n      >\n        <div className=\"input-container\">\n          {!!label && (\n            <div className=\"label-wrapper\">\n              {label}\n              {required && <span className=\"indicator\"> *</span>}\n            </div>\n          )}\n          <div className=\"input-wrapper\">{children}</div>\n        </div>\n        {hasError && <div className=\"error\">{error}</div>}\n      </div>\n    );\n  },\n);\n\nInputContainer.displayName = 'InputContainer';\n\nInputContainer.defaultProps = {\n  className: undefined,\n  disabled: undefined,\n  error: undefined,\n  label: undefined,\n  readOnly: undefined,\n  required: undefined,\n};\n\nInputContainer.propTypes = {\n  children: PropTypes.node.isRequired,\n  className: PropTypes.string,\n  disabled: PropTypes.bool,\n  error: PropTypes.node,\n  label: PropTypes.node,\n  readOnly: PropTypes.bool,\n  required: PropTypes.bool,\n};\n\nexport default InputContainer;\n","import React, { forwardRef, useRef } from 'react';\nimport * as PropTypes from 'prop-types';\nimport InputContainer from '../InputContainer/InputContainer';\n\nconst Input = forwardRef(\n  (\n    {\n      className,\n      defaultValue,\n      disabled,\n      error,\n      label,\n      name,\n      onChange,\n      onBlur,\n      readOnly,\n      required,\n      value,\n      ...props\n    },\n    parentRef,\n  ) => {\n    const internalRef = useRef(null);\n\n    const field = { ...props.field };\n    if (Object.keys(field).length !== 0) {\n      delete props.form;\n      delete props.field;\n    }\n\n    let ref = parentRef;\n    if (!ref) {\n      ref = internalRef;\n    }\n\n    return (\n      <InputContainer\n        className={className}\n        label={label}\n        error={error}\n        disabled={disabled}\n        readOnly={readOnly}\n        required={required}\n        ref={ref}\n      >\n        <input\n          name={name}\n          ref={ref}\n          defaultValue={defaultValue}\n          value={value}\n          onChange={onChange}\n          onBlur={onBlur}\n          disabled={disabled}\n          readOnly={readOnly}\n          {...field}\n          {...props}\n        />\n      </InputContainer>\n    );\n  },\n);\n\nInput.displayName = 'Input';\n\nInput.defaultProps = {\n  className: undefined,\n  defaultValue: undefined,\n  disabled: undefined,\n  error: undefined,\n  field: undefined,\n  form: undefined,\n  label: undefined,\n  name: undefined,\n  onBlur: undefined,\n  onChange: undefined,\n  placeholder: undefined,\n  readOnly: undefined,\n  required: undefined,\n  type: 'text',\n  value: undefined,\n};\n\nInput.propTypes = {\n  className: PropTypes.string,\n  defaultValue: PropTypes.string,\n  disabled: PropTypes.bool,\n  error: PropTypes.string,\n  /**\n   * field and form props are used by Formik\n   */\n  field: PropTypes.object,\n  form: PropTypes.object,\n  label: PropTypes.string,\n  // eslint-disable-next-line react/require-default-props\n  name: PropTypes.string,\n  onBlur: PropTypes.func,\n  onChange: PropTypes.func,\n  placeholder: PropTypes.string,\n  readOnly: PropTypes.bool,\n  required: PropTypes.bool,\n  type: PropTypes.string,\n  value: PropTypes.string,\n};\n\nexport default Input;\n","import moment from \"moment\";\n\nexport const colors = {\n  black: {\n    color: \"rgba(0,0,0,0.54)\",\n    backgroundColor: \"#EEE\"\n  },\n  red: {\n    color: \"#B4443C\",\n    backgroundColor: \"rgba(180,68,60,0.39)\"\n  },\n  orange: {\n    color: \"#813F0B\",\n    backgroundColor: \"#F79862\"\n  },\n  green: {\n    color: \"#86BC25\",\n    backgroundColor: \"rgba(134,188,37,0.29)\"\n  },\n  blue: {\n    color: \"#2187D4\",\n    backgroundColor: \"rgba(33,135,212,0.39)\"\n  },\n  purple: {\n    color: \"#7D3B9B\",\n    backgroundColor: \"rgba(125,59,155,0.39)\"\n  }\n};\n\nfunction groupBy(array, f) {\n  var groups = {};\n  array.forEach(function(o) {\n    var group = JSON.stringify(f(o));\n    groups[group] = groups[group] || [];\n    groups[group].push(o);\n  });\n  return Object.keys(groups).map(function(group) {\n    return groups[group];\n  });\n}\n\n/**\n * random light colors for content panel\n * same color for same manufSeq\n */\nfunction getRandomColor() {\n  let letters = \"BCDEF\".split(\"\");\n  let color = \"#\";\n  for (let i = 0; i < 6; i++) {\n    color += letters[Math.floor(Math.random() * letters.length)];\n  }\n  return color;\n}\n\nfunction isEmpty(obj) {\n  for (var prop in obj) {\n    return false;\n  }\n  return true;\n}\n\nfunction arrayToObject(array) {\n  if (array == null) return {};\n  let objectToReturn = {};\n  array.forEach(object => {\n    objectToReturn[object.id] = object;\n  });\n  return { ...objectToReturn };\n}\n\n/**\n * format time in zones form of scheduler\n */\nfunction getCorrectTimeFormat(timing) {\n  let time = timing && timing.split(\":\");\n  let formattedTime = 0;\n  if (time) {\n    if (time[1] === \"00\") {\n      time[1] = 60;\n      formattedTime = parseInt(time[0], 0) * parseInt(time[1], 0);\n    } else {\n      let minutes = parseInt(time[1], 0); //get the minute parts\n      let multiplier = 60 / minutes; //get the sections part to show timing\n      formattedTime =\n        (parseInt(time[0], 0) * multiplier + 1) * parseInt(time[1], 0); //multiply hours and minutes\n    }\n  }\n  return formattedTime;\n}\n\n/**\n * get dates between two dates\n */\nfunction enumerateDaysBetweenDates(startDate, endDate) {\n  let dates = [startDate, endDate];\n  let currDate = moment(startDate).startOf(\"day\");\n  let lastDate = moment(endDate).startOf(\"day\");\n\n  while (currDate.add(1, \"days\").diff(lastDate) < 0) {\n    dates.push(currDate.clone().toDate());\n  }\n  return dates;\n}\n\nfunction translate(str) {\n  if (window._t && typeof str === \"string\") {\n    return window._t(str);\n  }\n  return str;\n}\n\nfunction hideQuickInfo() {\n  const { scheduler } = window;\n  scheduler.hideQuickInfo();\n  scheduler._quick_info_box = null;\n}\n\nfunction long_date_template(start) {\n  const { scheduler } = window;\n  return (\n    scheduler.templates.day_date(start) +\n    \", \" +\n    scheduler.templates.event_date(start)\n  );\n}\n\nconst status = [\n  translate(\"Draft\"),\n  translate(\"Canceled\"),\n  translate(\"Planned\"),\n  translate(\"In progress\"),\n  translate(\"Standby\"),\n  translate(\"Finished\")\n];\n\nfunction formatDate(date) {\n  return moment(date).format(\"YYYY-MM-DD HH:mm\");\n}\n\nfunction formatDateWithoutTime(date) {\n  return moment(date).format(\"DD/MM/YYYY\");\n}\n\nfunction momentToDateTime(date) {\n  return moment(date, \"YYYY-MM-DD HH:mm\").toDate();\n}\n\nfunction getShortDayName(date) {\n  switch (date.getDay()) {\n    case 0:\n      return \"Su\";\n    case 1:\n      return \"Mo\";\n    case 2:\n      return \"Tu\";\n    case 3:\n      return \"We\";\n    case 4:\n      return \"Th\";\n    case 5:\n      return \"Fr\";\n    case 6:\n      return \"Sa\";\n    default:\n      return \"\";\n  }\n}\nfunction formatUTC(date) {\n  return moment.utc(date);\n}\n\nfunction getCookie(cname) {\n  var name = cname + \"=\";\n  var decodedCookie = decodeURIComponent(document.cookie);\n  var ca = decodedCookie.split(\";\");\n  for (var i = 0; i < ca.length; i++) {\n    var c = ca[i];\n    while (c.charAt(0) === \" \") {\n      c = c.substring(1);\n    }\n    if (c.indexOf(name) === 0) {\n      return c.substring(name.length, c.length);\n    }\n  }\n  return \"\";\n}\n\n\nexport const getColorFromEvent = (event, manufacturingOrderList) => {\n  let prioritySelect = null;\n  if (event.manufOrder) {\n    let obj = manufacturingOrderList.find(\n        order => order.id === event.manufOrder.id\n    );\n    if (obj) {\n      prioritySelect = obj.prioritySelect;\n    }\n  }\n  let color = null;\n  let backgroundColor = null;\n  if (event.isMaintained === true) {\n    color = colors.black.backgroundColor;\n    backgroundColor = colors.black.color;\n  } else if (prioritySelect === 4 && event.isMaintained === false) {\n    color = colors.red.color;\n    backgroundColor = colors.red.backgroundColor;\n  } else if (prioritySelect === 3 && event.isMaintained === false) {\n    color = colors.orange.color;\n    backgroundColor = colors.orange.backgroundColor;\n  } else if (prioritySelect === 2 && event.isMaintained === false) {\n    color = colors.green.color;\n    backgroundColor = colors.green.backgroundColor;\n  } else if (prioritySelect === 1 && event.isMaintained === false) {\n    color = colors.blue.color;\n    backgroundColor = colors.blue.backgroundColor;\n  } else if (prioritySelect === null) {\n    color = colors.purple.color;\n    backgroundColor = colors.purple.backgroundColor;\n  }\n  return { color, backgroundColor };\n};\n\nasync function asyncForEach(array, callback) {\n  for (let index = 0; index < array.length; index++) {\n    await callback(array[index], index, array);\n  }\n}\n\nfunction addYearsToDate(dt,n)\n{\n  return new Date(dt.setFullYear(dt.getFullYear() + n));\n}\n\nfunction isValidDate(d) {\n  return d instanceof Date && !isNaN(d);\n}\n\nexport {\n  isValidDate,\n  asyncForEach,\n  groupBy,\n  getRandomColor,\n  addYearsToDate,\n  isEmpty,\n  arrayToObject,\n  getCorrectTimeFormat,\n  enumerateDaysBetweenDates,\n  translate,\n  hideQuickInfo,\n  long_date_template,\n  status,\n  formatDate,\n  formatDateWithoutTime,\n  getShortDayName,\n  formatUTC,\n  getCookie,\n  momentToDateTime\n};\n","import React from \"react\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport { withStyles } from \"@material-ui/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport Input from \"./Input/Input\";\nimport { translate } from \"../services/utils\";\n\nconst styles = {\n  dialogPaper: {\n    minWidth: \"50%\",\n    maxHeight: \"40%\"\n  }\n};\n\nconst ChangeDurationDialog = props => {\n  const onChangeReason = e => {\n    props.setReason(e.target.value);\n  };\n\n  const onValidate = () => {\n    props.setChangeDurationOpen(false);\n    props.validateChangeDuration();\n  };\n\n  const handleClose = () => {\n    props.setChangeDurationOpen(false);\n  };\n\n  const validate = translate(\"Validate\");\n  const error = translate(\"The reason is mandatory\");\n  return (\n    <Dialog\n      aria-labelledby=\"simple-dialog-title\"\n      open={props.open}\n      classes={{ paper: props.classes.dialogPaper }}\n      onClose={handleClose}\n    >\n      <>\n        <DialogTitle id=\"simple-dialog-title\">{translate(\"Change duration\")}</DialogTitle>\n        <Input\n          label={translate(\"Reason\")}\n          type=\"text\"\n          name=\"reason\"\n          value={props.reason}\n          onChange={onChangeReason}\n        />\n        {!props.reason && (\n          <>\n            <div style={{ color: \"red\", textAlign: \"center\" }}>{error}</div>\n            <Button readOnly={!props.reason} onClick={onValidate} variant=\"contained\" color=\"primary\" disabled>\n              {validate}\n            </Button>\n          </>\n        )}\n        {props.reason && (\n            <Button readOnly={!props.reason} onClick={onValidate} variant=\"contained\" color=\"primary\">\n              {validate}\n            </Button>\n        )}\n\n\n      </>\n    </Dialog>\n  );\n};\n\nexport default withStyles(styles)(ChangeDurationDialog);\n","import React, {useEffect, useState} from \"react\";\n\nconst regexStockLocation = /[?&]stockLocationId=([^&#]*)/g; // ?stockLocationId=1\nconst regexMachineType = /[?&]machineTypeId=([^&#]*)/g; // ?machineTypeId=1\nconst regexMachine = /[?&]machineId=([^&#]*)/g; //?machineId=1\nconst regexWorkCenterGroup = /[?&]workCenterGroupId=([^&#]*)/g; //?workCenterGroupId=1\nconst regexEmployee = /[?&]employeeId=([^&#]*)/g; //?employeeId=1\n\n//\nconst withUrlParams = (WrappedComponent) => {\n    return () => {\n        const [url] = useState(window.location.href);\n        const [queryString] = useState(window.location.search);\n        const [planningEmployee, setPlanningEmployee]  = useState(false);\n        const [type, setType] = useState(\"days\");\n        const [planningViewType, setPlanningViewType] = useState(\"days\");\n\n        const [machineId, setMachineId] = useState(null);\n        const [machineTypeId, setMachineTypeId] = useState(null);\n        const [stockLocationId, setStockLocationId] = useState(null);\n        const [workCenterGroupId, setWorkCenterGroupId] = useState(null);\n        const [employeeId, setEmployeeId] = useState(null);\n\n        useEffect( () => {\n            const urlParams = new URLSearchParams(queryString);\n            const planningEmployee = urlParams.get('planningEmployee');\n            setPlanningEmployee(planningEmployee);\n        }, [queryString]);\n\n        useEffect(() => {\n            const matchStockLocation = regexStockLocation.exec(url);\n            const matchMachineType = regexMachineType.exec(url);\n            const matchMachine = regexMachine.exec(url);\n            const matchWorkCenterGroup = regexWorkCenterGroup.exec(url);\n            const matchEmployee = regexEmployee.exec(url);\n\n            if (matchStockLocation) {\n                setStockLocationId(matchStockLocation[1]);\n                setType(\"tree\");\n                setPlanningViewType(\"withStockLocation\");\n            }\n\n            if (matchEmployee) {\n                setEmployeeId(matchEmployee[1]);\n                setType(\"days\");\n                setPlanningViewType(\"withEmployee\");\n            }\n\n            //while machinetype is in URL\n            if (matchMachineType) {\n                setMachineTypeId(matchMachineType[1]);\n                setType(\"tree\");\n                setPlanningViewType(\"withMachineType\");\n            }\n\n            //while machine is in URL\n            if (matchMachine) {\n                setMachineId(matchMachine[1]);\n                setType(\"days\");\n                setPlanningViewType(\"withMachine\");\n            }\n\n            //while machine is in URL\n            if (matchWorkCenterGroup) {\n                setWorkCenterGroupId(matchWorkCenterGroup[1]);\n                setType(\"tree\");\n                setPlanningViewType(\"withWorkCenterGroup\");\n            }\n        }, [url]);\n\n            if(!machineId && !machineTypeId && !stockLocationId && !workCenterGroupId && !employeeId) {\n                return (\n                  <div>\n                    Les paramètres de l'url sont vides. <br /><br />Les paramètres attendus sont les suivants:<br /><br />\n                    - ?stockLocationId=1<br/>\n                    - ?machineId=1<br/>\n                    - ?machineTypeId=1<br/>\n                    - ?workCenterGroupId=1<br/>\n                    - ?employeeId=1\n                  </div>\n                );\n            }\n\n            return <WrappedComponent url={url} type={type} planningEmployee={planningEmployee} planningViewType={planningViewType} employeeId={employeeId} workCenterGroupId={workCenterGroupId} stockLocationId={stockLocationId} machineTypeId={machineTypeId} machineId={machineId} />;\n    };\n};\n\nexport default withUrlParams;","import { getCookie } from \"./utils\";\nimport { trackPromise } from 'react-promise-tracker';\n\nconst csrfCookie = getCookie('CSRF-TOKEN');\nconst headers = new Headers();\nheaders.append(\"Accept\", \"application/json\");\nheaders.append(\"Content-Type\", \"application/json\");\nheaders.append(\"X-Requested-With\", \"XMLHttpRequest\");\nheaders.append(\"X-CSRF-Token\", csrfCookie);\n\nclass RESTService {\n\n  /**\n   * In local env\n   */\n  //static REST_URL = '/kombo-webapp/ws/rest/';\n  //static ACTION_URL = '/kombo-webapp/ws/action/';\n\n  /**\n   * In production mode\n   */\n  static REST_URL = '../../ws/rest/';\n  static ACTION_URL = '../../ws/action/';\n\n\n  static fetch(url, options) {\n\n    return trackPromise(fetch(url, options));\n  }\n\n  static request(url, config = {}, data = {}) {\n    const options = Object.assign(\n      {\n        method: \"POST\",\n        credentials: \"include\",\n        headers: headers,\n        mode: \"cors\",\n        body: JSON.stringify(data)\n      },\n      config\n    );\n    if (config.method === \"GET\") {\n      delete options.body;\n    }\n    return RESTService.fetch(url, options);\n  }\n\n  static post(url, data) {\n    const config = {\n      method: \"POST\"\n    };\n    return RESTService.request(url, config, data);\n  }\n\n  static put(url, data) {\n    const config = {\n      method: \"PUT\"\n    };\n    return RESTService.request(url, config, data);\n  }\n\n  //insert data\n  static add(entity, record) {\n    const data = {\n      data: record\n    };\n    const url = `${RESTService.REST_URL}${entity}`;\n    return RESTService.put(url, data);\n  }\n\n  //fetch data\n  static getData(entity, data, options = {}) {\n    const dataSend = {\n      ...data,\n      ...options\n    };\n    const url = `${RESTService.REST_URL}${entity}/search`;\n    return RESTService.post(url, dataSend);\n  }\n\n  //update\n  static update(entity, record, id) {\n    const data = {\n      data: record\n    };\n    const url = `${RESTService.REST_URL}${entity}/${id}`;\n    return RESTService.post(url, data);\n  }\n\n  //delete\n  static delete(entity, id) {\n    const config = {\n      method: \"DELETE\"\n    };\n    const url = `${RESTService.REST_URL}${entity}/${id}`;\n    return RESTService.request(url, config);\n  }\n\n  //fetch single data\n  static getId(entity, id) {\n    const url = `${RESTService.REST_URL}${entity}/${id}/fetch`;\n    return RESTService.post(url, {});\n  }\n\n  static getAction(model, action, data) {\n    const datas = {\n      model: model,\n      action: action,\n      data: data\n    };\n    const url = `${RESTService.ACTION_URL}`;\n    return RESTService.request(url, {}, datas);\n  }\n}\n\nexport default RESTService;\n","import React from \"react\";\nimport * as PropTypes from \"prop-types\";\nimport { css, cx } from \"emotion\";\n\nconst styles = () => ({\n    position: \"relative\",\n    width: \"90%\",\n    overflow: \"hidden\",\n    boxShadow: '0px 0px 2px 0 rgba(60,64,67, 0.5)',\n    backgroundColor: \"#0288d1\",\n    minWidth: \"80px\",\n    minHeight: 64,\n    borderRadius: 4,\n    marginTop: '5%',\n    marginLeft: \"5%\",\n    color: '#fff',\n    textAlign: 'center'\n});\n\nconst Card = ({ children, outlined, className, ...props }) => {\n\n    return (\n        <div className={cx(css(styles()), className)} {...props}>\n            {children}\n        </div>\n    );\n};\n\nCard.defaultProps = {\n    children: undefined,\n    className: undefined,\n    outlined: false\n};\n\nCard.propTypes = {\n    children: PropTypes.node,\n    className: PropTypes.string,\n    outlined: PropTypes.bool\n};\n\nexport default Card;\n","import React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { css, cx } from 'emotion';\nimport SimpleBar from 'simplebar-react';\nimport 'simplebar/dist/simplebar.min.css';\n\nconst styles = () => ({\n  height: '100%',\n  width: '100%',\n  '.simplebar-track.simplebar-vertical': {\n    width: 8,\n  },\n  '.simplebar-scrollbar': {\n    width: 8,\n    '::before': {\n      backgroundColor: 'rgba(0, 0, 0, 0.6)',\n      width: 8,\n    },\n  },\n});\n\nconst ScrollView = ({ className, children }) => {\n  return <SimpleBar className={cx(css(styles()), className)}>{children}</SimpleBar>;\n};\n\nScrollView.defaultProps = {\n  children: undefined,\n  className: undefined,\n};\n\nScrollView.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n};\n\nexport default ScrollView;\n","export const styles = {\n\n  container: {\n    padding: '4px',\n    border: '1px solid',\n    borderRadius: '4px',\n    transition: 'border-color ease 0.2s',\n    borderColor: 'grey',\n    ':hover': {\n      cursor: 'pointer',\n    },\n    ':focus-within, :hover': {\n      borderColor: 'blue',\n      label: {\n        color: 'blue',\n      },\n    },\n  },\n  hasError: {\n    borderColor: 'red',\n  },\n  disabled: {\n    borderColor: 'grey',\n    ':focus-within, :hover': {\n      borderColor: 'grey',\n      label: {\n        color: 'blue',\n      },\n    },\n  },\n  errorText: 'red',\n  errorTextContainer: {\n    display: 'inline-block',\n    float: 'right',\n  },\n  labelContainer: {\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n    lineHeight: '1.15rem',\n  },\n  select: {\n    width: '100%',\n    minWidth: '120px',\n    backgroundColor: 'transparent',\n    height: '20px',\n    padding: '0',\n    textOverflow: 'ellipsis',\n    boxSizing: 'border-box',\n    border: 'none',\n    ':disabled': {\n      background: 'transparent',\n      boxShadow: 'none',\n      borderColor: 'transparent',\n    },\n    ':placeholder': {\n      color: 'grey',\n    },\n\n    /* Disable material ui default animations */\n    '> div > div': {\n      background: 'transparent !important',\n      paddingRight: '5px',\n      padding: '0',\n      height: '20px',\n      lineHeight: '20px',\n    },\n    ':before': {\n      display: 'none',\n    },\n    ':after': {\n      display: 'none',\n    },\n  },\n\n  selectContainer: {\n    display: 'flex',\n    padding: '0 !important',\n    position: 'relative',\n    width: '100%',\n  },\n  nativeSelectContainer: {\n    alignItems: 'center',\n    display: 'flex',\n    width: '100%',\n  },\n  searchSelectButtonContainer: {\n    flexShrink: 0,\n  },\n  clearButton: {\n    minWidth: '18px',\n    minHeight: '18px',\n    borderRadius: '100%',\n    padding: '0',\n  },\n  clearButtonContainer: {\n    position: 'absolute',\n    right: '16px',\n  },\n\n  editButton: {\n    position: 'relative',\n    minWidth: '28px',\n    minHeight: '28px',\n    borderRadius: '100%',\n    padding: '0',\n    top: '-4px',\n  },\n  editButtonContainer: {\n    position: 'absolute',\n    right: '38px',\n  },\n  input: {\n    display: 'flex',\n    padding: 0,\n  },\n  valueContainer: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    flex: 1,\n    alignItems: 'center',\n    overflowX: 'hidden',\n    overflowY: 'inherit',\n    height: 'auto',\n  },\n  noOptionsMessage: {\n    padding: `8px 16px`,\n  },\n  singleValue: {\n    fontSize: 16,\n  },\n  placeholder: {\n    position: 'absolute',\n    left: 2,\n    fontSize: 16,\n  },\n  paper: {\n    position: 'absolute',\n    zIndex: 1,\n    marginTop: 2,\n    left: 0,\n    right: 0,\n    minWidth: 'fit-content',\n    maxHeight: 200,\n    overflow: 'hidden',\n    overflowY: 'auto',\n  },\n  divider: {\n    height: 16,\n  },\n};\n\nexport default styles;\n","import React from 'react';\n\nimport { MenuItem, Button } from '@material-ui/core';\nimport MaterialSelect from '@material-ui/core/Select';\nimport CloseIcon from '@material-ui/icons/Close';\nimport styles from './style';\nimport * as PropTypes from 'prop-types';\nimport { css } from 'emotion';\nimport InputContainer from \"../InputContainer/InputContainer\";\n\nclass Select extends React.PureComponent {\n  state = {\n    open: false,\n  };\n\n  handleOpen = e => {\n    e.preventDefault();\n    this.setState({ open: !this.state.open });\n  };\n\n  handleClose = () => {\n    this.setState({ open: false });\n  };\n\n  handleChange = event => {\n    this.handleClose();\n    this.props.onChange(event.target);\n  };\n\n  handleClear = event => {\n    event.stopPropagation();\n    this.props.onChange(null);\n  };\n\n  manageOptions = myOptions => {\n    let { value: initialValue } = this.props;\n    let value;\n    let options = [];\n    if (myOptions) {\n      options = Object.keys(myOptions).map(id => {\n        let option = myOptions[id];\n        if ((option || {}).value === (initialValue || {}).value) {\n          value = option.value;\n        }\n        return { label: (option || {}).label, value: option.value };\n      });\n    }\n\n    return { options, value };\n  };\n\n  render() {\n    let {\n      value: initialValue,\n      label,\n      canRemove = true,\n      errorMessage,\n      errorMessages,\n      name,\n      clearButtonProps,\n    } = this.props;\n    let value;\n\n    let myOptions = this.props.options;\n\n    let { value: valueFromOption, options: managedOptions } = this.manageOptions(myOptions);\n    value = valueFromOption;\n    if (!value) {\n      value = '';\n      initialValue = null;\n    }\n\n    if (\n      errorMessage == null &&\n      errorMessages != null &&\n      name != null &&\n      errorMessages[name] != null\n    ) {\n      errorMessage = errorMessages[name];\n    }\n\n    return (\n      <React.Fragment>\n        <InputContainer\n            label={label}\n        >\n          <div className={css(styles.selectContainer)}>\n            <div className={css(styles.nativeSelectContainer)}>\n              <MaterialSelect\n                name={name}\n                className={css(styles.select)}\n                disabled={this.props.disabled}\n                id={label}\n                onChange={this.handleChange}\n                onClose={this.handleClose}\n                onOpen={this.handleOpen}\n                open={this.state.open}\n                value={value}\n                readOnly={this.props.readOnly}\n              >\n                {managedOptions.map((option, i) => (\n                  <MenuItem key={i} value={option.value}>\n                    {option.label}\n                  </MenuItem>\n                ))}\n\n                {managedOptions.length === 0 && (\n                  <MenuItem key=\"noItemFounds\" disabled>\n                    No items found\n                  </MenuItem>\n                )}\n              </MaterialSelect>\n              <div className={css(styles.searchSelectButtonContainer)}>\n                {!this.props.disabled && initialValue && canRemove && (\n                  <span>\n                    <Button\n                      className={css(styles.clearButton)}\n                      style={{ ...clearButtonProps }}\n                      onClick={this.handleClear}\n                      tabIndex={-1}\n                    >\n                      <CloseIcon fontSize={'inherit'} />\n                    </Button>\n                  </span>\n                )}\n              </div>\n            </div>\n          </div>\n        </InputContainer>\n      </React.Fragment>\n    );\n  }\n}\n\nSelect.propTypes = {\n  label: PropTypes.string.isRequired,\n  showLabel: PropTypes.bool,\n  canRemove: PropTypes.bool,\n  required: PropTypes.bool,\n};\n\nSelect.defaultProps = {\n  showLabel: true,\n  canRemove: true,\n};\n\nexport default Select;\n","import {isEmpty} from \"./utils\";\n\nclass LocalStorageService {\n  static OPERATION_ORDER_EVENT_COLOR_STORE_KEY =\n    \"OPERATION_ORDER_EVENT_COLOR_STORE_KEY\";\n  static OPEN_STOCK_LOCATION_STORE_KEY = \"OPEN_STOCK_LOCATION_STORE_KEY\";\n  static OPEN_MACHINE_TYPE_STORE_KEY = \"OPEN_MACHINE_TYPE_STORE_KEY\";\n  static LAST_ACTIVE_MODE = \"LAST_ACTIVE_MODE\";\n  static LAST_ACTIVE_DATE = \"LAST_ACTIVE_DATE\";\n  static DATA_ID_BEING_DRAG = \"DATA_ID_BEING_DRAG\";\n\n\n  static setDragDataId(id = null) {\n    window.localStorage.setItem(LocalStorageService.DATA_ID_BEING_DRAG, id);\n  }\n\n  static getDragDataId() {\n    return window.localStorage.getItem(LocalStorageService.DATA_ID_BEING_DRAG);\n  }\n\n  static setActiveMode(data = null) {\n    window.localStorage.setItem(\n      LocalStorageService.LAST_ACTIVE_MODE,\n      JSON.stringify(data)\n    );\n  }\n\n  static getActiveMode() {\n    try {\n      const data = window.localStorage.getItem(\n        LocalStorageService.LAST_ACTIVE_MODE\n      );\n      let jsonData = {};\n      if (data) {\n        jsonData = JSON.parse(data);\n      }\n      if(isEmpty(jsonData)) { return null}\n      return jsonData;\n    } catch (e) {}\n    return null;\n  }\n\n  static setActiveDate(data = null) {\n    window.localStorage.setItem(\n      LocalStorageService.LAST_ACTIVE_DATE,\n      JSON.stringify(data)\n    );\n  }\n\n  static getActiveDate() {\n    try {\n      const data = window.localStorage.getItem(\n        LocalStorageService.LAST_ACTIVE_DATE\n      );\n      let jsonData = {};\n      if (data) {\n        jsonData = JSON.parse(data);\n      }\n\n      if(isEmpty(jsonData)) { return null}\n      return jsonData;\n    } catch (e) {}\n    return null;\n  }\n\n  static getOperationOrders() {\n    try {\n      const item = window.localStorage.getItem(\n        LocalStorageService.OPERATION_ORDER_EVENT_COLOR_STORE_KEY\n      );\n      return item ? JSON.parse(item) : [];\n    } catch (e) {\n      return [];\n    }\n  };\n\n  static setOperationOrders(data = null) {\n    window.localStorage.setItem(\n      LocalStorageService.OPERATION_ORDER_EVENT_COLOR_STORE_KEY,\n      JSON.stringify(data)\n    );\n  }\n\n  static getOpenStockLocations() {\n    try {\n      const item = window.localStorage.getItem(\n        LocalStorageService.OPEN_STOCK_LOCATION_STORE_KEY\n      );\n      return item ? JSON.parse(item) : [];\n    } catch (e) {\n      return [];\n    }\n  }\n\n  static setOpenStockLocations(data = null) {\n    window.localStorage.setItem(\n      LocalStorageService.OPEN_STOCK_LOCATION_STORE_KEY,\n      JSON.stringify(data)\n    );\n  }\n\n  static getOpenMachineTypes() {\n    try {\n      const item = window.localStorage.getItem(\n        LocalStorageService.OPEN_MACHINE_TYPE_STORE_KEY\n      );\n      return item ? JSON.parse(item) : [];\n    } catch (e) {\n      return [];\n    }\n  }\n\n  static setOpenMachineTypes(data = null) {\n    window.localStorage.setItem(\n      LocalStorageService.OPEN_MACHINE_TYPE_STORE_KEY,\n      JSON.stringify(data)\n    );\n  }\n}\n\nexport default LocalStorageService;\n","import React, { useEffect, useState } from \"react\";\nimport Card from \"../components/Card\";\nimport { Tooltip } from \"@rmwc/tooltip\";\nimport { Radio } from \"@rmwc/radio\";\nimport { translate, status, formatDate } from \"../services/utils\";\nimport ScrollView from \"../components/ScrollView\";\nimport NativeSelect from \"../components/NativeSelect\";\nimport Input from \"../components/Input/Input\";\nimport LocalStorageService from \"../services/LocalStorageService\";\nimport '@rmwc/radio/styles';\n\nconst divStyle = {\n  height: \"450px!important\",\n  overflow: \"scroll\"\n};\n\nconst toolTipStyle = {\n  width: \"240px\",\n  height: \"auto\",\n  background: \"#ffffff\",\n  color: \"black\",\n  border: \"none\",\n  borderRadius: \"4px\",\n  fontSize: \"1.1em\",\n  marginLeft: \"1%\",\n  paddingTop: 1,\n  paddingLeft: 12,\n  paddingBottom: 12,\n  boxShadow: \"8px 4px 8px 4px rgba(153,153,153,0.35)\"\n};\n\nconst computeTooltipContent = operationOrder => {\n  const lines = [];\n  lines.push(\"<div>\");\n  lines.push(`<b> ${operationOrder.manufOrder &&\n    operationOrder.manufOrder.manufOrderSeq} - ${translate(\"Priority\")} : ${\n    operationOrder.priority\n  }\n  </b><br /><br /> ${operationOrder.operationName}`);\n\n  if(operationOrder.realDuration) {\n    lines.push(`<b>${translate(\"Real duration(min)\")} :</b> ${operationOrder.realDuration / 60}`);\n  }\n  else if(operationOrder.plannedDuration) {\n    lines.push(`<b>${translate(\"Planned duration(min)\")} :</b> ${operationOrder.plannedDuration / 60}`);\n  }\n\n  if (operationOrder.isMaintained === false) {\n    if (operationOrder.product) {\n      lines.push(operationOrder.product && operationOrder.product.fullName);\n    }\n  }\n  if (operationOrder.clientPartner) {\n    lines.push(\n      operationOrder.clientPartner && operationOrder.clientPartner.fullName\n    );\n  }\n  if (operationOrder.statusSelect) {\n    lines.push(\n      `<b>${translate(\"Status\")} :</b> ${\n        status[operationOrder.statusSelect - 1]\n      }`\n    );\n  }\n  if (operationOrder.qty) {\n    if (operationOrder.isMaintained === false) {\n      lines.push(`<b>${translate(\"Quantity\")} :</b> ${operationOrder.qty}`);\n    }\n  }\n  if (operationOrder.bom) {\n    lines.push(`<b>${translate(\"BoM\")} :</b> ${operationOrder.bom}`);\n  }\n  if (operationOrder.prodProcess) {\n    lines.push(\n      `<b>${translate(\"Prod. Process\")} :</b> ${operationOrder.prodProcess}`\n    );\n  }\n  if (operationOrder.manufOrder && operationOrder.manufOrder.productionOrderSet) {\n    let display = \"\";\n    let productionOrders = operationOrder.manufOrder.productionOrderSet.map(po => po.productionOrderSeq);\n    if(productionOrders) {display = productionOrders.join(\" / \");}\n    lines.push(\n        `<b>${translate(\"Production order(s)\")} :</b> ${display}`\n    );\n  }\n  if (operationOrder.manufOrder && operationOrder.manufOrder.saleOrderSet) {\n    let display = \"\";\n    let saleOrders = operationOrder.manufOrder.saleOrderSet.map(so => so.fullName);\n    if(saleOrders) {display = saleOrders.join(\" / \");}\n    lines.push(\n        `<b>${translate(\"Sale order(s)\")} :</b> ${display}`\n    );\n  }\n  if (operationOrder.employees) {\n    lines.push(\"<b>Human Resource List : </b>\");\n    lines.push(operationOrder.employees);\n  }\n  lines.push(\n    `<b>${translate(\"From\")} : </b> ${formatDate(\n      operationOrder.plannedStartDateT\n    )}`\n  );\n  lines.push(\n    `<b>${translate(\"To\")} : </b> ${formatDate(operationOrder.plannedEndDateT)}`\n  );\n  lines.push(\"</div>\");\n  return lines.join(\"<br/>\");\n};\n\nconst DraftOperationOrder = ({\n  manufacturingOrderList,\n  operationOrderListLength,\n  draftOperationOrderListLength,\n  renderDraftOperationOrder,\n  prodHumanResourceList,\n  onDragend,\n  ...props\n}) => {\n  const [models, setModels] = useState(null);\n  const [filter, setFilter] = useState(\"\");\n  const [secondFilter, setSecondFilter] = useState(\"\");\n\n  useEffect(() => {\n    let list = [];\n    props.workCenterGroupModelList &&\n      props.workCenterGroupModelList.forEach(d => {\n        list.push({ label: d.name, value: d.id });\n      });\n    setModels(list);\n  }, [props.workCenterGroupModelList]);\n\n  useEffect(() => {\n    const timeoutId = setTimeout(function () {\n      props.setFilter(filter);\n    }, 800);\n    return () => clearTimeout(timeoutId);\n  }, [filter]);\n\n  useEffect(() => {\n    const timeoutId = setTimeout(function () {\n      props.setSecondFilter(secondFilter);\n    }, 800);\n    return () => clearTimeout(timeoutId);\n  }, [secondFilter]);\n\n  const onChangeFilter = e => {\n    setFilter(e.target.value);\n  };\n\n  const onChangeSecondFilter = e => {\n    setSecondFilter(e.target.value);\n\n  };\n\n  const onChangeWorkCenterGroup = value => {\n    if(models) {\n      const v = !value ? null : models.find(w => w.value === value.value);\n      props.setWorkCenterGroup(v);\n    }\n  };\n\n  const onDragStart = e => {\n    e.dataTransfer.effectAllowed = \"move\";\n    LocalStorageService.setDragDataId(e.target.getAttribute(\"data-id\"));\n  };\n  \n  const onChangeSearchTypeSelect = (evt) => {\n    props.setSearchTypeSelect(String(evt.currentTarget.value));\n  };\n\n  const cardList = renderDraftOperationOrder.map(o => {\n    const tooltipContent = computeTooltipContent(o);\n    let css = \"\";\n    if (o.saleOrder && o.saleOrder.sdsTypeSelect === 2 ) {\n      css = \" event_saleOrder_not_posed\";\n    }\n    if (o.saleOrder && o.saleOrder.sdsTypeSelect === 1 ) {\n      css = \" event_saleOrder_posed\";\n    }\n    return (\n      <div\n        onDragEnd={onDragend}\n        draggable=\"true\"\n        onDragStart={onDragStart}\n        id={`draftOperationOrder-${o.id}`}\n        data-id={o.id}\n        key={o.id}\n      >\n        <Tooltip\n          showArrow={true}\n          activateOn=\"click\"\n          content={\n            <div\n              style={toolTipStyle}\n              dangerouslySetInnerHTML={{ __html: tooltipContent }}\n            ></div>\n          }\n        >\n          <Card>\n            <b>\n              <div style={{\n                backgroundColor: o.headerColor,\n                width: \"100%\",\n                height: \"100%\",\n                color: o.textColor\n              }}>\n                <div style={{ display: \"flex\" }}>\n                  {o.manufOrder && o.manufOrder.manufOrderSeq}\n                  <div style={{ position: \"absolute\", top: 0, right: \"2px\" }}>\n                    {o.materialCode ? o.materialCode.sdsCode : ''}\n                  </div>\n                </div>\n              </div>\n            </b>\n            <div\n              className={css}\n              style={{\n                backgroundColor: o.contentColor,\n                width: \"100%\",\n                height: \"100%\",\n                color: o.textColor\n              }}\n            >\n              <div className=\"ellipsive_content\">\n                {o.operationName}\n                <br />\n                {o.product && o.product.fullName}\n                <br />\n                {o.clientPartner && o.clientPartner.fullName}\n                <br />\n              </div>\n            </div>\n          </Card>\n        </Tooltip>\n      </div>\n    );\n  });\n\n  const draftTitle = translate(\"Operations order to plan\");\n  const filterTitle = translate(\"Filter on\");\n  const left = translate(\"Left\");\n  const right = translate(\"Right\");\n  const all = translate(\"All\");\n  return (\n    <React.Fragment>\n      <h3 style={{ textAlign: \"center\", color: \"#0288d1\" }}>\n        {draftTitle}\n      </h3>\n      <h5 style={{ textAlign: \"center\", color: \"#0288d1\", marginBottom: 0 }}>\n        {filterTitle}\n      </h5>\n      <Radio\n          value=\"left\"\n          checked={props.searchTypeSelect === 'left'}\n          onChange={onChangeSearchTypeSelect}\n      >\n        {left}\n      </Radio>\n\n      <Radio\n          value=\"right\"\n          checked={props.searchTypeSelect === 'right'}\n          onChange={onChangeSearchTypeSelect}\n      >\n        {right}\n      </Radio>\n      <Radio\n          value=\"all\"\n          checked={props.searchTypeSelect === 'all'}\n          onChange={onChangeSearchTypeSelect}\n      >\n        {all}\n      </Radio>\n      <Input\n        label={translate(\"Filter (product, customer, ...)\")}\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        onChange={onChangeFilter}\n      />\n      <Input\n          label={translate(\"Filter (product, customer, ...)\")}\n          type=\"text\"\n          name=\"secondFilter\"\n          value={secondFilter}\n          onChange={onChangeSecondFilter}\n      />\n      {\n        models && models.length > 0 && (\n            <NativeSelect\n                name=\"filterByWorkCenterGroup\"\n                label={translate(\"Filter by work center group\")}\n                value={props.workCenterGroup}\n                options={models}\n                onChange={onChangeWorkCenterGroup}\n                canRemove={true}\n            />\n        )\n      }\n\n      <ScrollView style={{ height: \"100%\" }}>\n        <div style={divStyle}>\n          {cardList}\n        </div>\n      </ScrollView>\n    </React.Fragment>\n  );\n};\n\nexport default DraftOperationOrder;\n","import React, { useEffect, useState } from \"react\";\nimport RESTService from \"../services/RESTService\";\nimport { translate } from \"../services/utils\";\nimport DraftOperationOrder from \"../app/DraftOperationOrder\";\n\nconst withMachine = WrappedComponent => {\n  return props => {\n    const [renderData, setRenderData] = useState({\n      machineList: null,\n      employeeList: null,\n      dayPlanningList: null,\n      workCenterGroupId: props.workCenterGroupId,\n      workCenterGroupModelList: null,\n      renderOperationOrder: null,\n      renderDraftOperationOrder: null,\n      manageChangeDuration: false,\n      workCenterGroupName: null\n    });\n    const [workCenterGroup, setWorkCenterGroup] = useState(null);\n    const [filter, setFilter] = useState(\"\");\n    const [secondFilter, setSecondFilter] = useState(\"\");\n    const [reload, setReload] = useState(false);\n    const [loading, setLoading] = useState(false);\n    const [reloadOperations, setReloadOperations] = useState(false);\n    const [searchTypeSelect, setSearchTypeSelect] = useState(\"left\");\n\n    const fetchData = async function() {\n      setLoading(true);\n      let machineList = [];\n      let employeeList = [];\n      let renderDraftOperationOrder = [];\n      let renderOperationOrder = [];\n      const res = await RESTService.getAction(\n        \"com.axelor.apps.production.db.OperationOrder\",\n        \"com.axelor.apps.production.pro.web.PlanificationController:initData\",\n        {\n          machineId: props.machineId,\n          employeeId: props.employeeId,\n          stockLocationId: props.stockLocationId,\n          machineTypeId: props.machineTypeId,\n          search: filter,\n          secondSearch: secondFilter,\n          searchTypeSelect,\n          planningEmployee: props.planningEmployee || false,\n          workCenterGroupId: props.workCenterGroupId || (workCenterGroup || {}).value\n        }\n      );\n      const { data = {} } = await res.json();\n      if (data && data.machineList) {\n        machineList = data.machineList.sort((a, b) => a.id - b.id);\n      }\n      if(data && data.employeeList) {\n        employeeList = data.employeeList.sort((a, b) => a.id - b.id);\n      }\n      if (data.renderOperationOrder) {\n        renderDraftOperationOrder = data.renderOperationOrder.filter(\n          oo => !oo.isMicroPlanningDone\n        );\n        renderOperationOrder = data.renderOperationOrder.filter(\n          oo => oo.isMicroPlanningDone\n        );\n      }\n      setRenderData({\n        machineList,\n        employeeList,\n        dayPlanningList: data.dayPlanningList,\n        workCenterGroupModelList: data.workCenterGroupModelList,\n        renderOperationOrder,\n        renderDraftOperationOrder,\n        manageChangeDuration: data.manageChangeDuration,\n        workCenterGroupId: props.workCenterGroupId || (workCenterGroup || {}).value,\n        workCenterGroupName: data.workCenterGroupName\n      });\n      setReload(false);\n    };\n\n    /**\n     * Almost static info, here we fetch data that won't change often, like machine, work center group model, planning etc..\n     * @returns {Promise<void>}\n     */\n    const fetchStaticData = async function() {\n      setLoading(true);\n      let machineList = [];\n      let employeeList = [];\n      const res = await RESTService.getAction(\n        \"com.axelor.apps.production.db.OperationOrder\",\n        \"com.axelor.apps.production.pro.web.PlanificationController:initStaticData\",\n        {\n          machineId: props.machineId,\n          employeeId: props.employeeId,\n          stockLocationId: props.stockLocationId,\n          machineTypeId: props.machineTypeId,\n          workCenterGroupId: props.workCenterGroupId\n        }\n      );\n      const { data = {} } = await res.json();\n      if (data && data.machineList) {\n        machineList = data.machineList.sort((a, b) => a.id - b.id);\n      }\n      if(data && data.employeeList) {\n        employeeList = data.employeeList.sort((a, b) => a.id - b.id);\n      }\n      setRenderData({\n        ...renderData,\n        machineList,\n        employeeList,\n        dayPlanningList: data.dayPlanningList || [],\n        workCenterGroupModelList: data.workCenterGroupModelList || [],\n        manageChangeDuration: data.manageChangeDuration,\n        workCenterGroupId: props.workCenterGroupId || (workCenterGroup || {}).value,\n        workCenterGroupName: data.workCenterGroupName\n      });\n      setReload(false);\n    };\n\n    /**\n     * fetch operation from machineList\n     * @returns {Promise<void>}\n     */\n    const fetchOperationData = async function() {\n      if ((renderData.machineList || renderData.employeeList) && !reload) {\n        const machineIds = renderData.machineList.map(wc => wc.id);\n        const employeeIds = renderData.employeeList.map(e => e.id);\n        if ((machineIds && machineIds.length === 0) && employeeIds && employeeIds.length === 0) {\n          const { dhtmlx } = window;\n          if (props.machineTypeId) {\n            dhtmlx.alert({\n              text: translate(\n                \"Warning ! We cannot find any machine with this type of machine, or any machine that has a work center set.\"\n              )\n            });\n          }\n          if (props.machineId) {\n            dhtmlx.alert({\n              text: translate(\n                \"Warning ! The work center on the machine is not set.\"\n              )\n            });\n          }\n          if (props.employeeId) {\n            dhtmlx.alert({\n              text: translate(\n                  \"Warning ! The employee cannot be retrieve.\"\n              )\n            });\n          }\n          if (props.stockLocationId) {\n            dhtmlx.alert({\n              text: translate(\n                \"Warning ! We cannot find any machine or employee within this stock location, or any machine that has a work center set.\"\n              )\n            });\n          }\n          if (props.workCenterGroupId) {\n            dhtmlx.alert({\n              text: translate(\n                  \"Warning ! We cannot find any machine or employee for this work center group.\"\n              )\n            });\n          }\n        } else if (!props.planningEmployee && machineIds && machineIds.length > 0) {\n          const res = await RESTService.getAction(\n            \"com.axelor.apps.production.db.OperationOrder\",\n            \"com.axelor.apps.production.pro.web.PlanificationController:initOperationData\",\n            {\n              machineIds: machineIds || [],\n              employeeIds: null,\n              search: filter,\n              secondSearch: secondFilter,\n              searchTypeSelect,\n              planningEmployee: props.planningEmployee || false,\n              workCenterGroupId: props.workCenterGroupId || (workCenterGroup || {}).value\n            }\n          );\n          const { data = {} } = await res.json();\n          let draftOperations = [];\n          let operations = [];\n          if (data.renderOperationOrder) {\n            draftOperations = data.renderOperationOrder.filter(\n              oo => !oo.isMicroPlanningDone\n            );\n            operations = data.renderOperationOrder.filter(\n              oo => oo.isMicroPlanningDone\n            );\n          }\n          setRenderData({\n            ...renderData,\n            renderOperationOrder: operations,\n            renderDraftOperationOrder: draftOperations\n          });\n        }\n        else if (employeeIds && employeeIds.length > 0) {\n          const res = await RESTService.getAction(\n              \"com.axelor.apps.production.db.OperationOrder\",\n              \"com.axelor.apps.production.pro.web.PlanificationController:initOperationData\",\n              {\n                machineIds: null,\n                employeeIds: employeeIds || [],\n                search: filter,\n                secondSearch: secondFilter,\n                searchTypeSelect,\n                planningEmployee: props.planningEmployee || false,\n                workCenterGroupId: props.workCenterGroupId || (workCenterGroup || {}).value\n              }\n          );\n          const { data = {} } = await res.json();\n          let draftOperations = [];\n          let operations = [];\n          if (data.renderOperationOrder) {\n            draftOperations = data.renderOperationOrder.filter(\n                oo => !oo.isMicroPlanningDone\n            );\n            operations = data.renderOperationOrder.filter(\n                oo => oo.isMicroPlanningDone\n            );\n          }\n          setRenderData({\n            ...renderData,\n            renderOperationOrder: operations,\n            renderDraftOperationOrder: draftOperations\n          });\n        }\n      }\n      setReload(false);\n      setReloadOperations(false);\n      setLoading(false);\n    };\n\n    useEffect(() => {\n      if (!props.machineTypeId && !props.machineId && !props.stockLocationId && !props.workCenterGroupId && !props.employeeId) {\n        return;\n      }\n      fetchStaticData();\n      // eslint-disable-next-line\n    }, [props.machineId, props.employeeId, props.machineTypeId, props.stockLocationId, props.workCenterGroupId]);\n\n    useEffect(() => {\n      if (!renderData.machineList && !renderData.employeeList) {\n        return;\n      }\n      fetchOperationData();\n      // eslint-disable-next-line\n    }, [renderData.employeeList, renderData.machineList, filter, secondFilter, workCenterGroup, searchTypeSelect, props.planningEmployee]);\n\n    useEffect(() => {\n      if (reload) {\n        fetchData();\n      }\n      // eslint-disable-next-line\n    }, [reload]);\n\n    useEffect(() => {\n      if (reloadOperations) {\n        fetchOperationData();\n      }\n      // eslint-disable-next-line\n    }, [reloadOperations]);\n\n    if (\n      !renderData &&\n      !renderData.renderOperationOrder &&\n      !renderData.machineList &&\n      !renderData.employeeList &&\n      !renderData.workCenterGroupModelList &&\n      !renderData.renderDraftOperationOrder &&\n      !renderData.dayPlanningList &&\n      !props.machineTypeId &&\n      !props.machineId &&\n      !props.employeeId &&\n      !props.stockLocationId &&\n      !props.workCenterGroupId\n    ) {\n      return null;\n    }\n    return (\n      <WrappedComponent\n        renderData={renderData}\n        setReload={setReload}\n        setReloadOperations={setReloadOperations}\n        workCenterGroup={workCenterGroup}\n        workCenterGroupId={props.workCenterGroupId}\n        setWorkCenterGroup={setWorkCenterGroup}\n        filter={filter}\n        setFilter={setFilter}\n        secondFilter={secondFilter}\n        setSecondFilter={setSecondFilter}\n        loading={loading}\n        searchTypeSelect={searchTypeSelect}\n        setSearchTypeSelect={setSearchTypeSelect}\n        planningEmployee={props.planningEmployee}\n        {...props}\n      />\n    );\n  };\n};\n\nexport default withMachine;\n","import React, { useEffect } from \"react\";\n\nconst withRenderOperation = WrappedComponent => {\n  return props => {\n    /**\n     * Update the scheduler config with the machine list\n     */\n    useEffect(() => {\n      const { scheduler } = window;\n      scheduler.config.serverLists = {};\n      if(props.planningEmployee && props.renderData.employeeList) {\n        scheduler.serverList(\"sections\", props.renderData.employeeList);\n      }\n      else {\n        if(props.renderData.machineList) {\n          scheduler.serverList(\"sections\", props.renderData.machineList);\n        }\n        if(props.renderData.employeeList) {\n          scheduler.serverList(\"sections\", props.renderData.employeeList);\n        }\n      }\n\n    }, [props.renderData.machineList, props.renderData.employeeList, props.planningEmployee]);\n\n\n\n    if (!props.renderData.renderOperationOrder && !props.renderData.renderDraftOperationOrder) {\n      return null;\n    }\n\n    return (\n      <WrappedComponent\n        {...props}\n      />\n    );\n  };\n};\n\nexport default withRenderOperation;\n","import RESTService from \"./RESTService\";\nimport {momentToDateTime} from \"./utils\";\n\nexport const updateOperationOrder = (formPayload, id, setReload) => {\n  RESTService.getId(\"com.axelor.apps.production.db.OperationOrder\", id).then(\n      res => {\n        res.json().then(result => {\n          const { data } = result;\n          if (data && data.length) {\n            formPayload.version = data[0].version;\n            RESTService.update(\n                \"com.axelor.apps.production.db.OperationOrder\",\n                formPayload,\n                id\n            ).then(res => {\n              setReload(true)\n            });\n          }\n        });\n      }\n  );\n};\n\nexport const updateOperationOrderDateAndMachine = async (id, startDate, endDate, machineOrEmployeeId, reason, setReload, setReason, machinePlanning) => {\n\n  setReason(\"\");\n  const { dhtmlx } = window;\n  const formPayload = {\n    plannedStartDateT: startDate,\n    plannedEndDateT: endDate,\n  };\n  const operationOrderRes = await RESTService.getId(\n      \"com.axelor.apps.production.db.OperationOrder\",\n      id\n  );\n  const opeationOrderJson = await operationOrderRes.json();\n  const { data: records } = opeationOrderJson;\n  if (records && records.length) {\n    formPayload.version = records[0].version;\n    const operationOrderUpdateRes = await RESTService.update(\n        \"com.axelor.apps.production.db.OperationOrder\",\n        formPayload,\n        id\n    );\n    const operationOrderUpdateJson = await operationOrderUpdateRes.json();\n    const { status, data: updatedRecords } = operationOrderUpdateJson;\n    if(status === -1) {\n      dhtmlx.alert({\n        text: `Une erreur est survenue: ${updatedRecords.message}`\n      });\n      return null;\n    }\n    if (updatedRecords && updatedRecords.length) {\n      let data = {\n        oldStartDate: momentToDateTime(records[0].plannedStartDateT),\n        oldEndDate: momentToDateTime(records[0].plannedEndDateT),\n        id,\n        reason,\n      };\n      if(machinePlanning) {\n        data.machineId = machineOrEmployeeId;\n      }\n      else{\n        data.employeeId = machineOrEmployeeId;\n      }\n       RESTService.getAction(\n          \"com.axelor.apps.production.db.OperationOrder\",\n          \"com.axelor.apps.sd.web.OperationOrderControllerSD:updateOperationOrderDateAndMachine\",\n          data\n      ).then(() => {\n        setReload(true);\n      });\n    }\n  }\n\n\n\n};\n\nexport const planOperationOrder = async (operationOrderId, machineOrEmployeId, workCenterId, startDate, machinePlanning) => {\n  const { dhtmlx } = window;\n  let formPayload = {};\n  if(machinePlanning) {\n    formPayload = {\n      plannedStartDateT: startDate,\n      machine: { id: machineOrEmployeId },\n      workCenter: { id: workCenterId }\n    };\n  }\n  else {\n    formPayload = {\n      plannedStartDateT: startDate,\n      sdsEmployee: { id: machineOrEmployeId }\n    };\n  }\n\n  const operationOrderRes = await RESTService.getId(\n      \"com.axelor.apps.production.db.OperationOrder\",\n      operationOrderId\n  );\n  const opeationOrderJson = await operationOrderRes.json();\n  const { data: records } = opeationOrderJson;\n  if (records && records.length) {\n    formPayload.version = records[0].version;\n    const operationOrderUpdateRes = await RESTService.update(\n        \"com.axelor.apps.production.db.OperationOrder\",\n        formPayload,\n        operationOrderId\n    );\n    const operationOrderUpdateJson = await operationOrderUpdateRes.json();\n    const { status, data: updatedRecords } = operationOrderUpdateJson;\n    if(status === -1) {\n      dhtmlx.alert({\n        text: `Une erreur est survenue: ${updatedRecords.message}`\n      });\n      return null;\n    }\n    if (updatedRecords && updatedRecords.length) {\n      const data = {\n        context: {\n          ...updatedRecords[0]\n        }\n      };\n        return await RESTService.getAction(\n            \"com.axelor.apps.production.db.OperationOrder\",\n            \"com.axelor.apps.production.pro.web.ProProductionOrderController:plan\",\n            data\n        );\n    }\n  }\n};","import {\n  arrayToObject,\n  enumerateDaysBetweenDates,\n  formatDateWithoutTime,\n  getCorrectTimeFormat,\n  getShortDayName,\n  hideQuickInfo,\n  long_date_template,\n  translate\n} from \"./utils\";\nimport {\n  updateOperationOrder,\n  updateOperationOrderDateAndMachine\n} from \"./AOSRESTService\";\nimport moment from \"moment\";\nimport LocalStorageService from \"./LocalStorageService\";\n\nconst status = [\n  translate(\"Draft\"),\n  translate(\"Canceled\"),\n  translate(\"Planned\"),\n  translate(\"In progress\"),\n  translate(\"Standby\"),\n  translate(\"Finished\")\n];\n\n/**\n * Init the scheduler config\n */\nexport const initSchedulerConfig = () => {\n  const { scheduler } = window;\n  scheduler.config.multi_day = false;\n  scheduler.xy.scale_height = 70;\n  scheduler.config.server_utc = false;\n  scheduler.config.active_link_view = \"timeline\";\n  scheduler.locale.labels.dhx_cal_today_button = translate(\"Today\");\n  scheduler.locale.labels.week_timeline_tab = translate(\"Week\");\n  scheduler.locale.labels.month_timeline_tab = translate(\"Month\");\n  scheduler.locale.labels.minute_timeline_tab = translate(\"Minute\");\n  scheduler.locale.labels.timeline_tab = translate(\"Day\");\n  scheduler.locale.labels.section_custom = \"Section\";\n  scheduler.locale.labels.year_tab = translate(\"Year\");\n\n  scheduler.config.details_on_create = true;\n  scheduler.config.details_on_dblclick = true;\n  scheduler.config.dblclick_create = false;\n\n  scheduler.config.xml_date = \"%Y-%m-%d %H:%i\";\n\n  scheduler.config.limit_time_select = true;\n\n  scheduler.config.first_hour = 0;\n  scheduler.config.last_hour = 22;\n  scheduler.config.time_step = 5;\n  scheduler.config.container_autoresize = false;\n\n  scheduler.config.select = false;\n  scheduler.locale.labels.icon_freeze = translate(\"Freeze\");\n  scheduler.locale.labels.icon_free = translate(\"Unfreeze\");\n  scheduler.locale.labels.icon_start = translate(\"Start\");\n  scheduler.locale.labels.icon_end = translate(\"End\");\n  scheduler.locale.labels.icon_delete = translate(\"Unplan\");\n  scheduler.locale.labels.icon_change_duration = translate(\"Modify duration\");\n\n  scheduler.config.quick_info_detached = true;\n};\n\nexport const initCalendar = (calendar, setCalendar) => {\n  const { scheduler } = window;\n  if (calendar) {\n  } else {\n    scheduler.destroyCalendar(calendar);\n    let newCalendar = scheduler.renderCalendar({\n      container: \"cal_here\",\n      navigation: true,\n      handler: function(date) {\n        scheduler.setCurrentView(date, scheduler._mode);\n      }\n    });\n    setCalendar(newCalendar);\n    scheduler.linkCalendar(newCalendar);\n  }\n};\n\nexport const initDateFormat = () => {\n  const { scheduler } = window;\n  let weekDateFormat = scheduler.date.date_to_str(\"%M %j\");\n\n  scheduler.templates.day_date = function(date) {\n    return formatDateWithoutTime(date);\n  };\n\n  scheduler.templates.week_timeline_scale_date = date => {\n    return \"<br/>\" + weekDateFormat(date);\n  };\n\n  scheduler.templates.month_timeline_scale_date = date => {\n    return getShortDayName(date) + \"<br/>\" + date.getDate();\n  };\n\n  scheduler.calculateDuration = event => {\n    return Math.round((event.end_date - event.start_date) / (1000 * 60 * 60));\n  };\n};\n\nexport const initScheduler = renderOperationOrder => {\n  const { scheduler } = window;\n  let activeMode = LocalStorageService.getActiveMode() || \"timeline\";\n  let activeDate = LocalStorageService.getActiveDate() || new Date();\n  scheduler.init(\"scheduler_here\", activeDate, activeMode);\n  scheduler.parse(renderOperationOrder, \"json\");\n};\n\nexport const initDayTimeLine = (type, step, date) => {\n  const { scheduler } = window;\n  scheduler.config.serverLists[\"timeline\"] = \"sections\";\n  const todayDate = date || new Date();\n  const hours = todayDate.getHours();\n  const minutes = todayDate.getMinutes() - (todayDate.getMinutes() % 5);\n  const currentStep = step || 5;\n  const totalMinutes = (hours * 60 + minutes - 10) / currentStep;\n  scheduler.createTimelineView({\n    fit_events: true,\n    name: \"timeline\",\n    x_unit: \"minute\",\n    x_date: \"%H:%i\",\n    x_step: currentStep,\n    x_size: 16,\n    x_start: totalMinutes,\n    x_length: 14,\n    render: type,\n    scrollable: true,\n    column_width: 70,\n    smart_rendering: true,\n    folder_dy: 40,\n    full_event__dy: true,\n    event_dy: 100,\n    dy: 80,\n    y_unit: scheduler.serverList(\"sections\"),\n    y_property: \"section_id\",\n    section_autoheight: false,\n    resize_events: false\n  });\n};\n\nexport const initWeekTimeLine = (type, date, step) => {\n  const { scheduler } = window;\n  scheduler.config.serverLists[\"week_timeline\"] = \"sections\";\n  scheduler.createTimelineView({\n    fit_events: true,\n    name: \"week_timeline\",\n    render: type,\n    folder_events_available: false,\n    x_unit: \"day\",\n    x_date: \"%M %j\",\n    x_step: 1,\n    x_size: 7,\n    x_length: 7,\n    column_width: 70,\n    smart_rendering: true,\n    folder_dy: 40,\n    full_event__dy: true,\n    event_dy: 100,\n    dy: 80,\n    y_unit: scheduler.serverList(\"sections\"),\n    y_property: \"section_id\",\n    section_autoheight: false,\n    resize_events: false,\n    scrollable: true\n  });\n\n  scheduler.date.week_timeline_start = scheduler.date.week_start;\n  if (date) {\n    scheduler.date.add(date, step, \"week\");\n  }\n};\n\nexport const initMonthTimeLine = (type, date, step) => {\n  const { scheduler } = window;\n  scheduler.config.serverLists[\"month_timeline\"] = \"sections\";\n  scheduler.createTimelineView({\n    fit_events: true,\n    resize_events: false,\n    name: \"month_timeline\",\n    render: type,\n    x_unit: \"day\",\n    x_date: \"%D %j\",\n    x_step: 1,\n    x_size: 14,\n    x_length: 7,\n    column_width: 70,\n    smart_rendering: true,\n    folder_dy: 40,\n    full_event__dy: true,\n    event_dy: 100,\n    dy: 80,\n    y_unit: scheduler.serverList(\"sections\"),\n    y_property: \"section_id\",\n    section_autoheight: false\n  });\n\n  scheduler.date.month_timeline_start = scheduler.date.month_start;\n  if (date) {\n    scheduler.date.add(date, step, \"month\");\n  }\n};\n\nexport const initPlanning = (type, planningViewType, renderData, workCenterGroupId, planningEmployee) => {\n  console.debug(\"planningEmployee\", planningEmployee)\n  if (!renderData.machineList && !renderData.employeeList) {\n    return;\n  }\n  const { scheduler } = window;\n\n  //after init\n  scheduler.initPlanning = () => {\n    //parent is stock location\n    if (type === \"tree\" && planningViewType === \"withStockLocation\") {\n      let parent = {};\n      if(planningEmployee) {\n        if (renderData.employeeList) {\n          renderData.employeeList.forEach(e => {\n            const stockLocation = Object.assign(\n                { employees: [] },\n                parent[e.sdsWorkshop.id] || e.sdsWorkshop\n            );\n            stockLocation.employees.push(e);\n            parent[stockLocation.id] = stockLocation;\n          });\n        }\n      }\n      else if (renderData.machineList) {\n        renderData.machineList.forEach(machine => {\n          const stockLocation = Object.assign(\n            { machines: [] },\n            parent[machine.stockLocation.id] || machine.stockLocation\n          );\n          stockLocation.machines.push(machine);\n          parent[stockLocation.id] = stockLocation;\n        });\n      }\n      createTree(parent, scheduler, \"withStockLocation\");\n    }\n    else if (type === \"tree\" && planningViewType === \"withWorkCenterGroup\") {\n      let parent = {};\n      if (renderData.machineList) {\n        renderData.machineList.forEach(machine => {\n          const workCenterGroup = Object.assign(\n              { machines: [] },\n              parent[workCenterGroupId] || {id: workCenterGroupId, name: renderData.workCenterGroupName}\n          );\n          workCenterGroup.machines.push(machine);\n          parent[workCenterGroup.id] = workCenterGroup;\n        });\n      }\n      if (renderData.employeeList) {\n        renderData.employeeList.forEach(e => {\n          const workCenterGroup = Object.assign(\n              { employees: [] },\n              parent[workCenterGroupId] || {id: workCenterGroupId, name: renderData.workCenterGroupName}\n          );\n          workCenterGroup.employees.push(e);\n          parent[workCenterGroup.id] = workCenterGroup;\n        });\n      }\n      createTree(parent, scheduler, \"withWorkCenterGroup\");\n    } else if (type === \"tree\" && planningViewType === \"withMachineType\") {\n      //parent is machine type\n      let parent = {};\n      if (renderData.machineList) {\n        renderData.machineList.forEach(machine => {\n          const machineType = Object.assign(\n            { machines: [] },\n            parent[machine.machineType.id] || machine.machineType\n          );\n          machineType.machines.push(machine);\n          parent[machineType.id] = machineType;\n        });\n      }\n      createTree(parent, scheduler, \"withMachineType\");\n    } else {\n      //machine day view\n      if(renderData.machineList && renderData.machineList.length > 0) {\n        renderData.machineList.forEach(element => {\n          element.key = element.id;\n          element.label = `${element.name} - ${element.serialNumber}`;\n          element.section_id = element.id;\n        });\n        scheduler.serverList(\"sections\", renderData.machineList);\n      }\n      else if(renderData.employeeList && renderData.employeeList.length > 0) {\n        renderData.employeeList.forEach(element => {\n          element.key = element.id;\n          element.label = `${element.name} `;\n          element.section_id = element.id;\n        });\n        scheduler.serverList(\"sections\", renderData.employeeList);\n      }\n\n    }\n  };\n\n  scheduler.initPlanning();\n};\n\nexport const updateParent = (parent, scheduler) => {\n  scheduler.serverList(\"sections\", parent.slice());\n};\n\nexport const setLocalOpenStockLocations = (parent, scheduler) => {\n  let localOpenStockLocations = LocalStorageService.getOpenStockLocations();\n  let openStockLocations = Object.keys(localOpenStockLocations).map(\n    i => localOpenStockLocations[i]\n  );\n\n  parent.forEach(element => {\n    let foundStockLocation = localOpenStockLocations[element.id];\n    if (!foundStockLocation) {\n      openStockLocations.push({ id: element.id, open: false });\n    } else {\n      element.open = foundStockLocation.open;\n    }\n  });\n  updateParent(parent, scheduler);\n  LocalStorageService.setOpenStockLocations(arrayToObject(openStockLocations));\n};\n\nexport const setLocalOpenMachineTypes = (parent, scheduler) => {\n  let localMachineTypes = LocalStorageService.getOpenMachineTypes();\n  let openMachineTypes = Object.keys(localMachineTypes).map(\n    i => localMachineTypes[i]\n  );\n\n  parent.forEach(element => {\n    let foundMachineType = localMachineTypes[element.id];\n    if (!foundMachineType) {\n      openMachineTypes.push({ id: element.id, open: false });\n    } else {\n      element.open = foundMachineType.open;\n    }\n  });\n  updateParent(parent, scheduler);\n  LocalStorageService.setOpenMachineTypes(arrayToObject(openMachineTypes));\n};\n\nexport const createTree = (parent, scheduler, planningViewType) => {\n  parent = Object.values(parent).map(cust => {\n    let o = {\n      id: cust.id,\n      key: cust.name,\n      label: cust.name\n    };\n    if(cust.employees) {\n      o.children = Object.values(cust.employees || {}).map(type => {\n        return {\n          ...cust,\n          ...type,\n          label: `${type.name}`,\n          key: type.id\n        };\n      })\n    }\n    if(cust.machines) {\n      o.children = Object.values(cust.machines || {}).map(type => {\n        return {\n          ...cust,\n          ...type,\n          label: `${type.name} - ${type.serialNumber}`,\n          key: type.id\n        };\n      })\n    }\n    return o;\n  });\n  if (planningViewType === \"withStockLocation\") {\n    setLocalOpenStockLocations(parent, scheduler);\n  } else {\n    setLocalOpenMachineTypes(parent, scheduler);\n  }\n};\n\nexport const addMarkedTimespan = (dayPlanningList, machineList) => {\n  if (!machineList) {\n    return;\n  }\n  const { scheduler } = window;\n  const week = [\n    \"sunday\",\n    \"monday\",\n    \"tuesday\",\n    \"wednesday\",\n    \"thursday\",\n    \"friday\",\n    \"saturday\"\n  ];\n  let spans = [],\n    zones;\n  machineList &&\n    machineList.forEach(mac => {\n      dayPlanningList &&\n        dayPlanningList.forEach(weekday => {\n          if (\n            mac.weeklyPlanning &&\n            mac.weeklyPlanning.id === weekday.weeklyPlann.id\n          ) {\n            const {\n              name,\n              morningFrom,\n              morningTo,\n              afternoonFrom,\n              afternoonTo\n            } = weekday;\n\n            let morningFromZone,\n              morningToZone,\n              afternoonFromZone,\n              afternoonToZone,\n              invert_zones = true;\n            morningFromZone = getCorrectTimeFormat(morningFrom);\n            morningToZone = getCorrectTimeFormat(morningTo);\n            afternoonFromZone = getCorrectTimeFormat(afternoonFrom);\n            afternoonToZone = getCorrectTimeFormat(afternoonTo);\n\n            if (morningFrom && morningTo && afternoonFrom && afternoonTo) {\n              zones = [\n                morningFromZone,\n                morningToZone,\n                afternoonFromZone,\n                afternoonToZone\n              ];\n            } else if (\n              morningFrom &&\n              morningTo &&\n              afternoonFrom === null &&\n              afternoonTo === null\n            ) {\n              zones = [morningFromZone, morningToZone];\n            } else if (\n              morningFrom &&\n              morningTo === null &&\n              afternoonFrom === null &&\n              afternoonTo\n            ) {\n              zones = [morningFromZone, afternoonToZone];\n            } else if (\n              morningFrom &&\n              morningTo === null &&\n              afternoonTo === null\n            ) {\n              zones = [morningFromZone, 24 * 60];\n            } else if (\n              morningFrom === null &&\n              morningTo === null &&\n              afternoonFrom &&\n              afternoonTo\n            ) {\n              zones = [afternoonFromZone, afternoonToZone];\n            } else if (\n              morningFrom === null &&\n              morningTo === null &&\n              afternoonFrom &&\n              afternoonTo === null\n            ) {\n              zones = [afternoonFromZone, 24 * 60];\n            } else if (\n              morningFrom === null &&\n              afternoonFrom === null &&\n              morningTo\n            ) {\n              zones = [0, morningToZone];\n            } else if (\n              morningFrom === null &&\n              morningTo === null &&\n              afternoonFrom === null &&\n              afternoonTo\n            ) {\n              zones = [0, afternoonToZone];\n            } else if (\n              morningFrom === null &&\n              morningTo &&\n              afternoonFrom &&\n              afternoonTo === null\n            ) {\n              zones = [0, morningToZone, afternoonFromZone, 24 * 60];\n            } else if (\n              morningFrom === null &&\n              morningTo === null &&\n              afternoonFrom === null &&\n              afternoonTo === null\n            ) {\n              zones = \"fullday\";\n              invert_zones = false;\n            }\n\n            //Create planning marks\n            let spanId = scheduler.addMarkedTimespan({\n              days: week.indexOf(name),\n              zones: zones,\n              invert_zones: invert_zones,\n              css: \"gray_section\",\n              sections: {\n                timeline: mac.id,\n                week_timeline: mac.id,\n                month_timeline: mac.id\n              },\n              type: \"planning\"\n            });\n            spans.push(spanId);\n          }\n        });\n    });\n  return spans;\n};\n\nfunction showAlert(isMaintenanceSpan, isPlanningSpan) {\n  const { dhtmlx } = window;\n  if (isMaintenanceSpan) {\n    dhtmlx.alert({\n      text: translate(\n        \"Warning ! The machine is under maintenance during this period.\"\n      )\n    });\n  } else {\n    if (isPlanningSpan) {\n      dhtmlx.alert({\n        text: translate(\n          \"Warning! You are about to drop an operation outside of the activity schedule of the machine.\"\n        )\n      });\n    }\n  }\n}\n\nexport const onBeforeEventChange = (\n  reason,\n  setReload,\n  setReason,\n  manageChangeDuration,\n  setOnMove,\n  machinePlanning\n) => {\n  //event drag & drop\n  const { scheduler, dhtmlx } = window;\n  return scheduler.attachEvent(\"onBeforeEventChanged\", async function(\n    ev,\n    e,\n    is_new,\n    original\n  ) {\n    setOnMove({move: null, id: null});\n    if(scheduler.checkInMarkedTimespan(scheduler.getEvent(ev.id), \"previous_operation\")) {\n      dhtmlx.alert({\n        text: translate(\n            \"Warning! You are about to reschedule an operation during a previous operation.\"\n        )\n      });\n      scheduler.getEvent(ev.id).start_date = original.start_date;\n      scheduler.getEvent(ev.id).end_date = original.end_date;\n      scheduler.getEvent(ev.id).section_id = original.section_id;\n      scheduler.updateEvent(ev.id);\n      return false;\n    }\n    else if(scheduler.checkInMarkedTimespan(scheduler.getEvent(ev.id), \"unauthorized_machine\")) {\n      dhtmlx.alert({\n        text: translate(\n            \"Warning! You are about to reschedule an operation with an unauthorized machine.\"\n        )\n      });\n      scheduler.getEvent(ev.id).start_date = original.start_date;\n      scheduler.getEvent(ev.id).end_date = original.end_date;\n      scheduler.getEvent(ev.id).section_id = original.section_id;\n      scheduler.updateEvent(ev.id);\n      return false;\n    }\n    //maintenace operation order can't change machine\n    if (original.isMaintained === true) {\n      if (ev.section_id !== original.section_id) {\n        return false;\n      } else {\n        return true;\n      }\n    } else {\n      if (ev.id) {\n        if (\n          ev.section_id !== original.section_id ||\n          (ev.start_date.getTime() !== original.start_date.getTime() ||\n            ev.end_date.getTime() !== original.end_date.getTime())\n        ) {\n          if (manageChangeDuration) {\n            updateOperationOrderDateAndMachine(\n              ev.id,\n              ev.start_date,\n              ev.end_date,\n              ev.section_id,\n              reason,\n              setReload,\n              setReason,\n              machinePlanning\n            );\n          } else {\n            const formPayload = {\n              plannedStartDateT: ev.start_date,\n              plannedEndDateT: ev.end_date\n            };\n\n            if (ev.isMaintained === false) {\n              if(machinePlanning) {\n                formPayload.machine = { id: ev.section_id };\n              }\n              else {\n                formPayload.sdsEmployee = { id: ev.section_id };\n              }\n            }\n            updateOperationOrder(formPayload, ev.id, setReload);\n          }\n          return true;\n        } else {\n          return false;\n        }\n      }\n    }\n  });\n};\n\nexport const attachEvents = (setCurrentMode, manageChangeDuration, machineList, setGreySpanList, setOnMove) => {\n  const detachEvents = [];\n  const { scheduler } = window;\n\n  let onSchedulerReady = scheduler.attachEvent(\"onSchedulerReady\", function() {\n    var to_str = scheduler.date.date_to_str(\"%H:%i\");\n    scheduler.templates.hour_scale = function(date) {\n      return to_str(date);\n    };\n  });\n\n  detachEvents.push(onSchedulerReady);\n\n  let onEventDrag = scheduler.attachEvent(\"onEventDrag\", function (id, mode, e){\n    //any custom logic here\n    if(mode === \"move\") {\n        setOnMove({move: true, id});\n    }\n  });\n  detachEvents.push(onEventDrag);\n\n\n  let onViewChange = scheduler.attachEvent(\"onViewChange\", function(mode, date) {\n    setCurrentMode(mode);\n  });\n  detachEvents.push(onViewChange);\n\n  let onBeforeViewChange = scheduler.attachEvent(\n    \"onBeforeViewChange\",\n    (old_mode, old_date, mode, currentDate) => {\n      let date = moment(currentDate).toDate();\n      if (mode === \"month_timeline\") {\n        let year = date.getFullYear();\n        let month = date.getMonth() + 1;\n        let d = new Date(year, month, 0);\n        let days = d.getDate();\n        scheduler.matrix[\"month_timeline\"].x_size = days;\n        scheduler.matrix[\"month_timeline\"].x_length = days;\n      }\n      return true;\n    }\n  );\n  detachEvents.push(onBeforeViewChange);\n\n  let onBeforeLightbox = scheduler.attachEvent(\"onBeforeLightbox\", id => {\n    return false;\n  });\n  detachEvents.push(onBeforeLightbox);\n\n  let onBeforeEventCreated = scheduler.attachEvent(\n    \"onBeforeEventCreated\",\n    e => {\n      return false;\n    }\n  );\n  detachEvents.push(onBeforeEventCreated);\n\n  let onSchedulerResize = scheduler.attachEvent(\"onSchedulerResize\", () => {\n    scheduler.setCurrentView();\n  });\n  detachEvents.push(onSchedulerResize);\n\n  //Freeze events\n  let onBeforeDrag = scheduler.attachEvent(\"onBeforeDrag\", (id, mode, ev) => {\n    let event = scheduler.getEvent(id);\n    if (mode === \"resize\" && !event.changeDuration) {\n      return false;\n    }\n    if (\n      event &&\n      (event.isPinned === true ||\n        event.statusSelect === 6 ||\n        event.statusSelect === 4)\n    ) {\n      return false;\n    }\n    return true;\n  });\n  detachEvents.push(onBeforeDrag);\n\n  //dynamic scale changes\n  let onClick = scheduler.attachEvent(\"onClick\", id => {\n    let event = scheduler.getEvent(id);\n    hideQuickInfo(scheduler);\n    let icons = [];\n    if (!event.isMaintained) {\n      if (event.statusSelect === 3) {\n        if (event.isPinned === true) {\n          icons.push(\"icon_free\");\n        } else {\n          icons.push(\"icon_freeze\");\n        }\n        if (event.statusSelect === 3) {\n          icons.push(\"icon_start\");\n        }\n      }\n\n      if (event.statusSelect === 4) {\n        icons.push(\"icon_end\");\n      }\n      if (event.statusSelect !== 4 && event.statusSelect !== 6) {\n        icons.push(\"icon_delete\");\n      }\n      if (\n        manageChangeDuration &&\n        event &&\n        (event.isPinned === false &&\n          !event.changeDuration &&\n          (event.statusSelect !== 6 && event.statusSelect !== 4))\n      ) {\n        icons.push(\"icon_change_duration\");\n      }\n    }\n\n    scheduler.config.icons_select = icons;\n    scheduler.showQuickInfo(id);\n    return true;\n  });\n  detachEvents.push(onClick);\n\n  let onDragEnd = scheduler.attachEvent(\"onDragEnd\", (id, mode, e) => {\n    let event = scheduler.getEvent(id);\n    let isMaintenanceSpan = scheduler.checkInMarkedTimespan(\n      event,\n      \"maintenance\"\n    );\n    let isPlanningSpan = scheduler.checkInMarkedTimespan(event, \"planning\");\n\n    showAlert(isMaintenanceSpan, isPlanningSpan);\n  });\n  detachEvents.push(onDragEnd);\n\n  /**\n   * ev\tobject\tthe event object\n   * evs\tarray\ta collection of events' objects which already occupy the same time-slot\n   * @type {string | * | void}\n   */\n  let onEventCollision = scheduler.attachEvent(\"onEventCollision\", function(\n    ev,\n    evs\n  ) {\n    let canProceed = true;\n    evs.forEach(event => {\n      let isBlockedSpan = scheduler.checkInMarkedTimespan(event, \"blocked\");\n      let isMaintenanceSpan = scheduler.checkInMarkedTimespan(\n        event,\n        \"maintenance\"\n      );\n      let isPlanningSpan = scheduler.checkInMarkedTimespan(event, \"planning\");\n      if (isBlockedSpan) {\n        canProceed = false;\n      }\n      showAlert(isMaintenanceSpan, isPlanningSpan);\n    });\n    return canProceed;\n  });\n\n  detachEvents.push(onEventCollision);\n\n  return detachEvents;\n};\n\n/**\n * maintenance marked spans on scheduler (red)\n */\nexport const addMaintenanceMarkedSpans = (\n  maintenanceRequestList,\n  maintenanceSpanList,\n  equipmentMaintenanceList\n) => {\n  const { scheduler } = window;\n  const maintenanceSpans = [...maintenanceSpanList];\n  maintenanceRequestList &&\n    maintenanceRequestList.forEach(request => {\n      let {\n        actionSelect,\n        requestDate,\n        doneOn,\n        expectedDate,\n        equipementMaintenance\n      } = request;\n      let getSection =\n        equipmentMaintenanceList &&\n        equipmentMaintenanceList.find(\n          equipment => equipment.id === equipementMaintenance.id\n        );\n      const id = getSection && getSection.machine && getSection.machine.id;\n\n      if (id) {\n        if (actionSelect === 1) {\n          let config = {\n            days: moment(doneOn || expectedDate).toDate(),\n            zones: \"fullday\",\n            css: \"red_section\",\n            sections: { timeline: id, week_timeline: id, month_timeline: id },\n            type: \"maintenance\"\n          };\n          scheduler.deleteMarkedTimespan(config);\n          scheduler.addMarkedTimespan(config);\n          maintenanceSpanList.push(config);\n        } else {\n          let dates = enumerateDaysBetweenDates(\n            moment(requestDate).toDate(),\n            moment(doneOn || expectedDate).toDate()\n          );\n          let config = {\n            days: dates,\n            zones: \"fullday\",\n            css: \"red_section\",\n            sections: { timeline: id, week_timeline: id, month_timeline: id },\n            type: \"maintenance\"\n          };\n          scheduler.deleteMarkedTimespan(config);\n          scheduler.addMarkedTimespan(config);\n          maintenanceSpans.push(config);\n        }\n      }\n    });\n  return maintenanceSpans;\n};\n\nconst getCss = event => {\n  let css = \"\";\n  let prioritySelect;\n\n  if (event.manufOrder) {\n    prioritySelect = event.manufOrder.prioritySelect;\n  }\n\n  if (event.isMaintained === true && event.isPinned === false) {\n    css += \"event_maintenance\";\n  } else if (event.isMaintained === true && event.isPinned === true) {\n    css += \"event_maintenance_freeze\";\n  } else if (\n    prioritySelect === 4 &&\n    event.isPinned === false &&\n    event.isMaintained === false\n  ) {\n    css += \"event_danger\";\n  } else if (\n    prioritySelect === 3 &&\n    event.isPinned === false &&\n    event.isMaintained === false\n  ) {\n    css += \"event_warning\";\n  } else if (\n    prioritySelect === 2 &&\n    event.isPinned === false &&\n    event.isMaintained === false\n  ) {\n    css += \"event_primary\";\n  } else if (\n    prioritySelect === 1 &&\n    event.isPinned === false &&\n    event.isMaintained === false\n  ) {\n    css += \"event_normal\";\n  } else if (\n    prioritySelect === 4 &&\n    event.isPinned === true &&\n    event.isMaintained === false\n  ) {\n    css += \"event_danger_freeze\";\n  } else if (\n    prioritySelect === 3 &&\n    event.isPinned === true &&\n    event.isMaintained === false\n  ) {\n    css += \"event_warning_freeze\";\n  } else if (\n    prioritySelect === 2 &&\n    event.isPinned === true &&\n    event.isMaintained === false\n  ) {\n    css += \"event_primary_freeze\";\n  } else if (\n    prioritySelect === 1 &&\n    event.isPinned === true &&\n    event.isMaintained === false\n  ) {\n    css += \"event_normal_freeze\";\n  } else if (prioritySelect === null) {\n    css += \"event_usual\";\n  }\n\n  if (\n    event.statusSelect === 4 &&\n    event.isMaintained === false &&\n    event.saleOrder &&\n    event.saleOrder.sdsTypeSelect === 1\n  ) {\n    css += \" event_in_progress_posed\";\n  } else if (\n    event.statusSelect === 4 &&\n    event.isMaintained === false &&\n    event.saleOrder &&\n    event.saleOrder.sdsTypeSelect === 2\n  ) {\n    css += \" event_in_progress_not_posed\";\n  } else if (event.statusSelect === 4 && event.isMaintained === false) {\n    css += \" event_in_progress\";\n  }\n\n  if (event.statusSelect === 6 && event.isMaintained === false) {\n    css += \" event_finished\";\n  }\n\n  if (\n    event.saleOrder &&\n    event.saleOrder.sdsTypeSelect === 2 &&\n    event.statusSelect !== 6 &&\n    event.statusSelect !== 4\n  ) {\n    css += \" event_saleOrder_not_posed\";\n  }\n\n  if (\n    event.saleOrder &&\n    event.saleOrder.sdsTypeSelect === 1 &&\n    event.statusSelect !== 6 &&\n    event.statusSelect !== 4\n  ) {\n    css += \" event_saleOrder_posed\";\n  }\n\n  return css;\n};\n\nexport const label_pattern = (start, end, event, type) => {\n  let lines = [];\n  if (event) {\n    /**\n     * Header: Manuf order sequence and priority\n     */\n    if (type === \"event\") {\n      let name = \"\";\n      if (event.product && event.product.fullName && event.product.code) {\n        name = event.product.fullName.replace(`[${event.product.code}]`, \"\");\n      }\n      let css = getCss(event);\n      lines.push(`\n        <div className=\"container\" style=\"height: 100%; width: 100%\">\n          <div className=\"header\" style=\"margin-left: -0.75%; background-color: ${\n            event.headerColor\n          }\">\n            ${event.manufOrder && event.manufOrder.manufOrderSeq}\n            <div style=\"position: absolute; top: 0; right: 2px;\">\n              ${event.materialCode ? event.materialCode.sdsCode : \"\"}\n            </div>\n          </div>\n          <div class=\"dhx_cal_event_line ${css}\" className=\"mainbody\" style=\" z-index=-100000!important; height: 100%; background-color: ${\n        event.contentColor\n      }; color: black\">\n            ${event.operationName}\n            <br />\n            ${\n              event.product && event.product.code\n                ? `[${event.product.code}]`\n                : \"\"\n            }\n            <br />\n            ${name}\n            <br />\n            ${\n              event.clientPartner && event.clientPartner.fullName\n                ? event.clientPartner.fullName\n                : \"\"\n            }\n          </div>\n        </div>\n      `);\n\n      /*let content = `<div style=\" margin-left: -0.75%; background-color: ${event.contentColor}\">\n                        <div class=\"ellipsive_content\">\n                            ${event.operationName}\n                            <br />\n                            ${event.product && event.product.code ? `[${event.product.code}]` : \"\"}\n                            ${event.product && event.product.code ? `[${event.product.code}]` : \"\"}\n                            <br />\n                            ${name}\n                            <br />\n                            ${event.clientPartner && event.clientPartner.fullName ? event.clientPartner.fullName : \"\" }\n                            <br />\n                        </div>\n                    </div>`;\n      lines.push(content);*/\n    }\n\n    if (type === \"tooltip\") {\n      lines.push(`<b>\n      <div >\n        <div  style=\"margin-top: 0%; margin-left: 1%;\">\n          ${event.manufOrder && event.manufOrder.manufOrderSeq}\n          <div style=\"position: absolute; top: 0; right: 2px;\">${\n            event.materialCode ? event.materialCode.sdsCode : \"\"\n          }</div>\n        </div>\n      </div>\n    </b>`);\n      if (event.isMaintained === false) {\n        if (event.product) {\n          lines.push(event.product && event.product.fullName);\n        }\n      }\n      if (event.clientPartner) {\n        lines.push(event.clientPartner && event.clientPartner.fullName);\n      }\n      if (event.statusSelect) {\n        lines.push(\n          `<b>${translate(\"Status\")} :</b> ${status[event.statusSelect - 1]}`\n        );\n      }\n      if (event.qty) {\n        if (event.isMaintained === false) {\n          lines.push(`<b>${translate(\"Quantity\")} :</b> ${event.qty}`);\n        }\n      }\n      if (event.manufOrder.prioritySelect) {\n        if (event.isMaintained === false) {\n          let priority = \"Faible\";\n          if (event.manufOrder.prioritySelect === 2) {\n            priority = \"Normal\";\n          }\n          if (event.manufOrder.prioritySelect === 3) {\n            priority = \"Élevé\";\n          }\n          if (event.manufOrder.prioritySelect === 4) {\n            priority = \"Urgent\";\n          }\n          lines.push(`<b>${translate(\"Priority\")} :</b> ${priority}`);\n        }\n      }\n      if (event.realDuration) {\n        lines.push(\n          `<b>${translate(\"Real duration(min)\")} :</b> ${event.realDuration /\n            60}`\n        );\n      } else if (event.plannedDuration) {\n        lines.push(\n          `<b>${translate(\n            \"Planned duration(min)\"\n          )} :</b> ${event.plannedDuration / 60}`\n        );\n      }\n      if (event.bom) {\n        lines.push(`<b>${translate(\"BoM\")} :</b> ${event.bom}`);\n      }\n      if (event.prodProcess) {\n        lines.push(\n          `<b>${translate(\"Prod. Process\")} :</b> ${event.prodProcess}`\n        );\n      }\n      if (event.manufOrder && event.manufOrder.productionOrderSet) {\n        let display = \"\";\n        let productionOrders = event.manufOrder.productionOrderSet.map(\n          po => po.productionOrderSeq\n        );\n        if (productionOrders) {\n          display = productionOrders.join(\" / \");\n        }\n        lines.push(`<b>${translate(\"Production order(s)\")} :</b> ${display}`);\n      }\n      if (event.manufOrder && event.manufOrder.saleOrderSet) {\n        let display = \"\";\n        let saleOrders = event.manufOrder.saleOrderSet.map(so => so.fullName);\n        if (saleOrders) {\n          display = saleOrders.join(\" / \");\n        }\n        lines.push(`<b>${translate(\"Sale order(s)\")} :</b> ${display}`);\n      }\n      if (event.outsourcing) {\n        lines.push(`<b>${translate(\"Outsourcing\")} :</b> ${event.outsourcing}`);\n      }\n      if (event.employees) {\n        lines.push(\"<b>Human Resource List : </b>\");\n        lines.push(event.employees);\n      }\n      lines.push(`<b>${translate(\"From\")} : </b> ${long_date_template(start)}`);\n      lines.push(`<b>${translate(\"To\")} : </b> ${long_date_template(end)}`);\n    }\n  }\n  return lines.join(\"<br>\");\n};\n\nexport const initTemplates = planningViewType => {\n  const { scheduler } = window;\n  scheduler.attachEvent(\"onTemplatesReady\", function() {\n    initDateFormat();\n\n    scheduler.templates.event_bar_text = (start, end, event) => {\n      return label_pattern(start, end, event, \"event\");\n    };\n\n    scheduler.templates.tooltip_text = (start, end, event) => {\n      return label_pattern(start, end, event, \"tooltip\");\n    };\n\n    scheduler.templates.event_class = (start, end, event) => {\n      let css = \"\";\n      let prioritySelect;\n\n      if (event.manufOrder) {\n        prioritySelect = event.manufOrder.prioritySelect;\n      }\n\n      if (event.isMaintained === true && event.isPinned === false) {\n        css += \"event_maintenance\";\n      } else if (event.isMaintained === true && event.isPinned === true) {\n        css += \"event_maintenance_freeze\";\n      } else if (\n        prioritySelect === 4 &&\n        event.isPinned === false &&\n        event.isMaintained === false\n      ) {\n        css += \"event_danger\";\n      } else if (\n        prioritySelect === 3 &&\n        event.isPinned === false &&\n        event.isMaintained === false\n      ) {\n        css += \"event_warning\";\n      } else if (\n        prioritySelect === 2 &&\n        event.isPinned === false &&\n        event.isMaintained === false\n      ) {\n        css += \"event_primary\";\n      } else if (\n        prioritySelect === 1 &&\n        event.isPinned === false &&\n        event.isMaintained === false\n      ) {\n        css += \"event_normal\";\n      } else if (\n        prioritySelect === 4 &&\n        event.isPinned === true &&\n        event.isMaintained === false\n      ) {\n        css += \"event_danger_freeze\";\n      } else if (\n        prioritySelect === 3 &&\n        event.isPinned === true &&\n        event.isMaintained === false\n      ) {\n        css += \"event_warning_freeze\";\n      } else if (\n        prioritySelect === 2 &&\n        event.isPinned === true &&\n        event.isMaintained === false\n      ) {\n        css += \"event_primary_freeze\";\n      } else if (\n        prioritySelect === 1 &&\n        event.isPinned === true &&\n        event.isMaintained === false\n      ) {\n        css += \"event_normal_freeze\";\n      } else if (prioritySelect === null) {\n        css += \"event_usual\";\n      }\n\n      if (\n        event.statusSelect === 4 &&\n        event.isMaintained === false &&\n        event.saleOrder &&\n        event.saleOrder.sdsTypeSelect === 1\n      ) {\n        css += \" event_in_progress_posed\";\n      } else if (\n        event.statusSelect === 4 &&\n        event.isMaintained === false &&\n        event.saleOrder &&\n        event.saleOrder.sdsTypeSelect === 2\n      ) {\n        css += \" event_in_progress_not_posed\";\n      } else if (event.statusSelect === 4 && event.isMaintained === false) {\n        css += \" event_in_progress\";\n      }\n\n      if (event.statusSelect === 6 && event.isMaintained === false) {\n        css += \" event_finished\";\n      }\n\n      if (\n        event.saleOrder &&\n        event.saleOrder.sdsTypeSelect === 2 &&\n        event.statusSelect !== 6 &&\n        event.statusSelect !== 4\n      ) {\n        css += \" event_saleOrder_not_posed\";\n      }\n\n      return css;\n    };\n\n    let label_template = (key, label, obj) => {\n      const imageURLFront = \"/axelor-erp/ws/rest/com.axelor.meta.db.MetaFile/\";\n      // const imageURLFront = '../../ws/rest/com.axelor.meta.db.MetaFile/';\n      const imageURLBack = \"/content/download\";\n\n      //Update local state of parent\n      if (obj.level === 0 && obj.open !== undefined) {\n        if (planningViewType === \"withStockLocation\") {\n          let openStockLocations = LocalStorageService.getOpenStockLocations();\n          if (openStockLocations[obj.id]) {\n            openStockLocations[obj.id].open = obj.open;\n            LocalStorageService.setOpenStockLocations(openStockLocations);\n          }\n        } else {\n          let openMachineTypes = LocalStorageService.getOpenMachineTypes();\n          if (openMachineTypes[obj.id]) {\n            openMachineTypes[obj.id].open = obj.open;\n            LocalStorageService.setOpenMachineTypes(openMachineTypes);\n          }\n        }\n      }\n\n      if (obj.level === 0) {\n        return `\n        <div style=\"display:flex;font-size:12px;width:100%;\">\n        <div style=\"position:relative;flex:1;\">\n        <div>${obj.label}</div>\n        </div>\n        <div class=\"open_type\" style=\"width:8%;\">\n        <img style=\"width:\"11px\", height:\"11px\"\"  src=\"content/${\n          obj.open ? \"collapse\" : \"expand\"\n        }.png\" alt=\"${obj.label}\">\n        </div>\n        </div>`;\n      } else {\n        return `\n        <div>\n        <div style=\"display: flex; flex-direction: column; align-items: center; justify-content: center; height: 100%\">\n          <div style=\"padding-bottom: 5px\">${obj.label}</div>\n            ${\n              obj.picture\n                ? `\n              <div style=\"width:80px;height:48px; background-image:url(${imageURLFront}${obj.picture.id}${imageURLBack}); \n              background-size: contain;\n              background-repeat: no-repeat;\n              background-position: center;\" />`\n                : \"\"\n            }\n          </div>\n       </div>`;\n      }\n    };\n\n    for (let i in scheduler.matrix) {\n      scheduler.templates[i + \"_scale_label\"] = label_template;\n    }\n  });\n};\n","import { translate, addYearsToDate } from \"./utils\";\nimport RESTService from \"./RESTService\";\nimport { updateOperationOrder, planOperationOrder } from \"./AOSRESTService\";\n\nexport const initFree = (setReload) => {\n  const { scheduler } = window;\n  //onclick of free button\n  scheduler._click.buttons.free = id => {\n    scheduler.hideQuickInfo();\n    scheduler._quick_info_box = null;\n\n    const formPayload = {\n      isPinned: false\n    };\n\n    updateOperationOrder(formPayload, id, setReload);\n\n    let icons = [\"icon_freeze\"];\n    let event = scheduler.getEvent(id);\n    if (event.statusSelect === 3) {\n      icons.push(\"icon_start\");\n    }\n    if (event.statusSelect === 4) {\n      icons.push(\"icon_end\");\n    }\n    icons.push(\"icon_delete\");\n    scheduler.config.icons_select = icons;\n    scheduler.showQuickInfo(id);\n  };\n};\n\nexport const initStart = setReload => {\n  const { scheduler, dhtmlx } = window;\n  //onclick of start button\n  scheduler._click.buttons.start = id => {\n    const model = \"com.axelor.apps.production.db.OperationOrder\";\n    const action = \"action-operation-order-group-start\";\n    const data = {\n      context: {\n        id: id\n      }\n    };\n    RESTService.getAction(model, action, data).then(res => {\n      res.json().then(result => {\n        const { data } = result;\n        if (data && data.length) {\n          const record = data[0];\n          if (record && record.reload === true) {\n            setReload(true);\n          } else if (record && record.flash) {\n            dhtmlx.alert({\n              text: record.flash\n            });\n          }\n        }\n      });\n    });\n  };\n};\n\nexport const initFreeze = (setReload) => {\n  const { scheduler } = window;\n  scheduler._click.buttons.freeze = id => {\n    const formPayload = {\n      isPinned: true\n    };\n\n    updateOperationOrder(formPayload, id, setReload);\n  };\n};\n\nexport const initChangeDuration = (setChangeDurationOpen, setChangeDurationId, setReason) => {\n  const { scheduler } = window;\n  scheduler._click.buttons.change_duration = id => {\n    setChangeDurationOpen(true);\n    setChangeDurationId(id);\n    setReason(\"\");\n  };\n};\n\nexport const initToPlan = setReload => {\n  const { scheduler, dhtmlx } = window;\n  //onclick of delete button\n  scheduler._click.buttons.delete = id => {\n    let event = scheduler.getEvent(id);\n    if (event.isPinned) {\n      dhtmlx.alert({\n        text: \"You can't unplan a frozen operation.\"\n      });\n    } else {\n      dhtmlx.confirm({\n        type: \"confirm-warning\",\n        text: translate(\"Are you sure you want to unplan it?\"),\n        callback: result => {\n          if (result) {\n            RESTService.getAction(\n              \"com.axelor.apps.production.db.OperationOrder\",\n              \"com.axelor.apps.production.pro.web.ProProductionOrderController:undoMicroPlanning\",\n              { id: id }\n            ).then(res => {\n              if (res) {\n                setReload(true);\n              }\n            });\n          }\n        }\n      });\n    }\n  };\n};\n\nexport const initEnd = (setReload) => {\n  const { scheduler } = window;\n  //onclick of end button\n  scheduler._click.buttons.end = id => {\n    const model = \"com.axelor.apps.production.db.OperationOrder\";\n    const action = \"action-operation-order-group-finish\";\n    const data = {\n      context: {\n        id: id\n      }\n    };\n    RESTService.getAction(model, action, data).then(res => {\n      res.json().then(result => {\n        setReload(true)\n      });\n    });\n  };\n};\n\nexport const drop = async (\n  machineOrEmployeId,\n  operationOrderId,\n  workCenterId,\n  startDate,\n  setReload,\n  machinePlanning\n) => {\n  const { dhtmlx } = window;\n  const planResult = await planOperationOrder(\n    operationOrderId,\n    machineOrEmployeId,\n    workCenterId,\n    startDate,\n    machinePlanning\n  );\n  if (planResult) {\n    const planResultJson = await planResult.json();\n\n    if (\n      planResultJson &&\n      planResultJson.data &&\n      planResultJson.data[0] &&\n      planResultJson.data[0].flash\n    ) {\n      dhtmlx.alert({\n        text: translate(\n          \"Warning! You are about to drop an operation outside of the activity schedule of the machine.\"\n        )\n      });\n    } else {\n      setReload(true);\n    }\n  }\n};\n\nexport const dragOver = async (context, machineList, setGreySpanList) => {\n  const { scheduler } = window;\n  const res = await RESTService.getAction(\n    \"com.axelor.apps.production.db.OperationOrder\",\n    `com.axelor.apps.production.pro.web.ProProductionOrderController:getAuthorizedMachineAndPreviousOperation`,\n    context\n  );\n  const { data = {} } = await res.json();\n\n  const previousOperation = data.lastOperationOrder;\n  const authorizedMachineIds = data.machineIds;\n  let endDate =  addYearsToDate(new Date(), 1);\n  let startDate = addYearsToDate(new Date(), -1);\n  if (machineList) {\n    let timeSpanList = [];\n    machineList.forEach(m => {\n      if(authorizedMachineIds.includes(m.id)) {\n        if(previousOperation) {\n          let newEndDate = new Date(\n              previousOperation.realEndDateT || previousOperation.plannedEndDateT\n          );\n          let newStartDate = addYearsToDate(new Date(\n              previousOperation.realEndDateT || previousOperation.plannedEndDateT\n          ), -1);\n          const timeSpanId = scheduler.addMarkedTimespan({\n            start_date: newStartDate,\n            end_date: newEndDate,\n            zones: \"fullday\",\n            css: \"gray_section\",\n            type: \"previous_operation\",\n            sections: {\n              timeline: m.id,\n              week_timeline: m.id,\n              month_timeline: m.id\n            }\n          });\n          timeSpanList.push(timeSpanId);\n        }\n      }\n      else {\n        const timeSpanId = scheduler.addMarkedTimespan({\n          start_date: startDate,\n          end_date: endDate,\n          zones: \"fullday\",\n          css: \"gray_section\",\n          type: \"unauthorized_machine\",\n          sections: {\n            timeline: m.id,\n            week_timeline: m.id,\n            month_timeline: m.id\n          }\n        });\n        timeSpanList.push(timeSpanId);\n      }\n\n    });\n    setGreySpanList(timeSpanList);\n  }\n  console.debug(\"updateView\")\n  scheduler.updateView();\n};\n","import React from 'react';\nimport { usePromiseTracker } from \"react-promise-tracker\";\nimport { withStyles } from \"@material-ui/styles\";\n\nconst styles = {\n    position: \"fixed\",\nzIndex: 999,\nheight: \"2em\",\nwidth: \"2em\",\noverflow: \"show\",\nmargin: \"auto\",\ntop: 0,\nleft: 0,\nbottom: 0,\nright: 0\n};\nconst LoadingIndicator = (props) => {\n    const { promiseInProgress } = usePromiseTracker();\n    if(promiseInProgress || props.loading) {\n        return (\n            <div className=\"loading\">Loading&#8230;</div>\n        );\n    }\n    return null;\n\n};\n\nexport default withStyles(styles)(LoadingIndicator);\n","import React, { useEffect, useState } from \"react\";\nimport ChangeDurationDialog from \"../components/ChangeDurationDialog\";\nimport withUrlParams from \"../providers/UrlProvider\";\nimport withMachine from \"../providers/AOSProvider\";\nimport withRenderOperation from \"../providers/RenderProvider\";\nimport { compose } from \"recompose\";\nimport { translate, isValidDate } from \"../services/utils\";\nimport LocalStorageService from \"../services/LocalStorageService\";\nimport Select from \"react-select\";\nimport {\n  initSchedulerConfig,\n  initCalendar,\n  initDayTimeLine,\n  initWeekTimeLine,\n  initMonthTimeLine,\n  onBeforeEventChange,\n  attachEvents,\n  initTemplates,\n  initScheduler,\n  addMarkedTimespan,\n  addMaintenanceMarkedSpans,\n  initPlanning\n} from \"../services/schedulerConfig\";\nimport DraftOperationOrder from \"./DraftOperationOrder\";\nimport {\n  initToPlan,\n  initEnd,\n  initFree,\n  initFreeze,\n  initChangeDuration,\n  initStart,\n  dragOver,\n  drop\n} from \"../services/schedulerConfigRest\";\nimport LoadingIndicator from \"../components/LoadingIndicator\";\nimport {updateOperationOrder} from \"../services/AOSRESTService\";\n\nconst planningTimeOptions = [\n  { label: \"5 min\", name: \"5\", value: 5 },\n  { label: \"15 min\", name: \"15\", value: 15 },\n  { label: \"30 min\", name: \"30\", value: 30 },\n  { label: \"1h\", name: \"60\", value: 60 },\n  { label: \"2h\", name: \"120\", value: 120 },\n  { label: \"4h\", name: \"240\", value: 240 },\n  { label: \"8h\", name: \"480\", value: 480 }\n];\n\nfunction App(props) {\n  const [spanList, setSpanList] = useState([]);\n  const [detachEvents, setDetachEvents] = useState([]);\n  const [eventChange, setEventChange] = useState(null);\n  const [maintenanceSpanList, setMaintenanceSpanList] = useState([]);\n  const [greySpanList, setGreySpanList] = useState([]);\n  const [dragging, setDragging] = useState(false);\n  const [calendar, setCalendar] = useState(null);\n  const [currentMode, setCurrentMode] = useState(\n    LocalStorageService.getActiveMode() || \"timeline\"\n  );\n  const [step, setStep] = useState(5);\n  const [changeDurationOpen, setChangeDurationOpen] = useState(false);\n  const [changeDurationId, setChangeDurationId] = useState(null);\n  const [reason, setReason] = useState(\"\");\n  const [onMove, setOnMove] = useState({move: false, id: null});\n\n  useEffect(\n    () => {\n      const { scheduler } = window;\n      let activeStep = step || 5;\n      let activeDate = new Date(scheduler.getState().date);\n      initAll();\n      initSchedulerConfig();\n      initPlanning(props.type, props.planningViewType, props.renderData, props.workCenterGroupId, props.planningEmployee);\n\n      if(isValidDate(activeDate)) {\n        initDayTimeLine(props.type, activeStep, activeDate);\n        initWeekTimeLine(props.type, activeStep, activeDate);\n        initMonthTimeLine(props.type, activeStep, activeDate);\n      }\n      else {\n        initDayTimeLine(props.type);\n        initWeekTimeLine(props.type);\n        initMonthTimeLine(props.type);\n      }\n\n      let events = attachEvents(setCurrentMode, props.renderData.manageChangeDuration, props.renderData.machineList, setGreySpanList, setOnMove);\n      setDetachEvents(events);\n      eventChange && scheduler.detachEvent(eventChange);\n      let machinePlanning = props.renderData.machineList && props.renderData.machineList.length > 0;\n      let event = onBeforeEventChange(reason, props.setReloadOperations, setReason, props.renderData.manageChangeDuration, setOnMove, machinePlanning);\n      setEventChange(event);\n      initTemplates(props.planningViewType);\n\n      const spans = addMarkedTimespan(props.renderData.dayPlanningList, props.renderData.machineList);\n      const maintenanceSpans = addMaintenanceMarkedSpans(\n        props.maintenanceRequestList,\n        maintenanceSpanList\n      );\n\n      setSpanList(spans);\n      setMaintenanceSpanList(maintenanceSpans);\n      initFreeze(props.setReloadOperations);\n      initFree(props.setReloadOperations);\n      initStart(props.setReloadOperations);\n      initEnd(props.setReloadOperations);\n      initToPlan(props.setReloadOperations);\n      initScheduler(props.renderData.renderOperationOrder);\n      initCalendar(calendar, setCalendar);\n\n      if(props.renderData.manageChangeDuration) {\n        initChangeDuration(setChangeDurationOpen, setChangeDurationId, setReason);\n      }\n    },\n    // eslint-disable-next-line\n    [props.renderData.renderOperationOrder, props.renderData.machineList, props.renderData.employeeList, props.renderData.manageChangeDuration]\n  );\n\n  useEffect(() => {\n    const { scheduler } = window;\n    if(reason) {\n      eventChange && scheduler.detachEvent(eventChange);\n      let machinePlanning = props.renderData.machineList && props.renderData.machineList.length > 0;\n      let event = onBeforeEventChange(reason, props.setReloadOperations, setReason, props.renderData.manageChangeDuration, setOnMove, machinePlanning);\n      setEventChange(event);\n    }\n    // eslint-disable-next-line\n  }, [reason]);\n\n  useEffect( () => {\n    const { scheduler } = window;\n    if(onMove && onMove.move && onMove.id) {\n      const data = {\n        context: {\n          id: onMove.id\n        }\n      };\n      dragOver(data, props.renderData.machineList, setGreySpanList);\n    }\n    if(onMove && !onMove.move && !onMove.id) {\n      greySpanList.forEach(ts => {\n        scheduler.deleteMarkedTimespan(ts);\n      });\n      setGreySpanList([]);\n    }\n  }, [onMove.move]);\n\n\n  const onDragend = () => {\n    const { scheduler } = window;\n    setDragging(false);\n    greySpanList && greySpanList.forEach(ts => {\n      scheduler.deleteMarkedTimespan(ts);\n    });\n    setGreySpanList([]);\n  };\n\n  const onDragOver = e => {\n    e.preventDefault();\n    if (!dragging) {\n      setDragging(true);\n      console.debug(\"e.datatransfert\", e.dataTransfer)\n      let operationOrderId = LocalStorageService.getDragDataId();\n      const data = {\n        context: {\n          id: operationOrderId\n        }\n      };\n      dragOver(data, props.renderData.machineList, setGreySpanList);\n    }\n  };\n\n  const onDrop = e => {\n    const { scheduler, dhtmlx } = window;\n    e.preventDefault();\n    let action_data = scheduler.getActionData(e);\n    const startDate = action_data.date;\n    let endDate = new Date(startDate);\n    endDate.setDate(endDate.getDate() + 1);\n    const machineOrEmployeId = action_data.section;\n    let workCenterId = null;\n    let machinePlanning = false;\n    if (props.renderData.machineList && props.renderData.machineList.length > 0) {\n      const machine = props.renderData.machineList.find(\n          m => m.id === machineOrEmployeId\n      );\n      if(machine) {\n        machinePlanning = true;\n        const workCenter = machine.workCenter;\n        if (workCenter) {\n          workCenterId = workCenter.id;\n        }\n      }\n    }\n    let eventId = scheduler.addEvent({\n      start_date: startDate,\n      end_date:   endDate,\n      text:   \"Test\",\n      section_id: machineOrEmployeId\n    });\n    if(scheduler.checkInMarkedTimespan(scheduler.getEvent(eventId), \"previous_operation\")) {\n      scheduler.deleteEvent(eventId);\n      greySpanList && greySpanList.forEach(ts => {\n        scheduler.deleteMarkedTimespan(ts);\n      });\n      setGreySpanList([]);\n      scheduler.updateView();\n      dhtmlx.alert({\n        text: translate(\n            \"Warning! You are about to reschedule an operation during a previous operation.\"\n        )\n      });\n\n      return false;\n    }\n    else if(scheduler.checkInMarkedTimespan(scheduler.getEvent(eventId), \"unauthorized_machine\")) {\n      scheduler.deleteEvent(eventId);\n      greySpanList && greySpanList.forEach(ts => {\n        scheduler.deleteMarkedTimespan(ts);\n      });\n      setGreySpanList([]);\n\n      scheduler.updateView();\n      dhtmlx.alert({\n        text: translate(\n            \"Warning! You are about to reschedule an operation with an unauthorized machine.\"\n        )\n      });\n      return false;\n    }\n    else {\n      scheduler.deleteEvent(eventId);\n      let operationOrderId = LocalStorageService.getDragDataId();\n      if(workCenterId || !machinePlanning) {\n        drop(machineOrEmployeId, operationOrderId, workCenterId, startDate, props.setReloadOperations, machinePlanning);\n      }\n      else {\n        dhtmlx.alert({\n          text: translate(\n              \"Warning ! The work center on the machine is not set.\"\n          )\n        });\n      }\n\n    }\n  };\n\n  const initAll = () => {\n    const { scheduler } = window;\n    //set last updates in local\n    let mode = scheduler.getState().mode;\n    let activeDate = scheduler.getState().date;\n    LocalStorageService.setActiveDate(activeDate);\n    LocalStorageService.setActiveMode(mode);\n\n    //remove spans\n    spanList &&\n      spanList.forEach(span => {\n        scheduler.deleteMarkedTimespan(span);\n      });\n\n    //remove maintenanceSpans\n    maintenanceSpanList &&\n      maintenanceSpanList.forEach(span => {\n        scheduler.deleteMarkedTimespan(span);\n      });\n\n    //detachEvents\n    detachEvents &&\n      detachEvents.forEach(myEvent => {\n        scheduler.detachEvent(myEvent);\n      });\n\n    greySpanList && greySpanList.forEach(ts => {\n      scheduler.deleteMarkedTimespan(ts);\n    });\n    setGreySpanList([]);\n\n    eventChange && scheduler.detachEvent(eventChange);\n\n    //remove events\n    scheduler.clearAll();\n  };\n\n  const refreshPage = () => {\n    initAll();\n\n    setMaintenanceSpanList([]);\n    setSpanList([]);\n    setDetachEvents([]);\n    setEventChange(null);\n\n    //initSchedulerConfig();\n    props.setReload(true);\n  };\n\n  const onPlanningTimeChange = param => {\n    setStep(param.value);\n    initDayTimeLine(props.type, param.value);\n  };\n\n  const nextOnClick = () => {\n    const { scheduler } = window;\n    let state = scheduler.getState();\n    let mode = state.mode;\n    let activeDate = scheduler.getState().date;\n    if (mode === \"timeline\") {\n      let newDate = new Date(\n        activeDate.setMinutes(activeDate.getMinutes() + step)\n      );\n      scheduler.setCurrentView(newDate);\n      initDayTimeLine(props.type, step, newDate);\n    } else if (mode === \"week_timeline\") {\n      let newDate = activeDate.setDate(activeDate.getDate() + 7);\n      scheduler.setCurrentView(newDate, \"week_timeline\");\n    } else if (mode === \"month_timeline\") {\n      let newDate = activeDate.setMonth(activeDate.getMonth() + 1);\n      scheduler.setCurrentView(newDate, \"month_timeline\");\n    }\n  };\n\n  const prevOnClick = () => {\n    const { scheduler } = window;\n    let state = scheduler.getState();\n    let mode = state.mode;\n    let activeDate = scheduler.getState().date;\n\n    if (mode === \"timeline\") {\n      let newDate = new Date(\n        activeDate.setMinutes(activeDate.getMinutes() - step)\n      );\n      scheduler.setCurrentView(newDate);\n      initDayTimeLine(props.type, step, newDate);\n    } else if (mode === \"week_timeline\") {\n      let newDate = activeDate.setDate(activeDate.getDate() - 7);\n      scheduler.setCurrentView(newDate, \"week_timeline\");\n    } else if (mode === \"month_timeline\") {\n      let newDate = activeDate.setMonth(activeDate.getMonth() - 1);\n      scheduler.setCurrentView(newDate, \"month_timeline\");\n    }\n  };\n\n  const validateChangeDuration = () => {\n    if(changeDurationId && reason) {\n      const formPayload = {\n        sdsChangeDuration: true\n      };\n      updateOperationOrder(formPayload, changeDurationId, props.setReloadOperations);\n    }\n\n  };\n  return (\n    <React.Fragment>\n      <div style={{ display: \"flex\", flexDirection: \"row\" }}>\n        <div\n          style={{ float: \"left\", width: \"250px\", height: \"380px\", margin: 15 }}\n        >\n          {currentMode === \"timeline\" && (\n            <Select\n              className=\"basic-single\"\n              label={\"Paramétrages\"}\n              classNamePrefix=\"select\"\n              defaultValue={planningTimeOptions[0]}\n              name=\"planningTime\"\n              options={planningTimeOptions}\n              onChange={onPlanningTimeChange}\n            />\n          )}\n\n          {props.renderData.renderDraftOperationOrder && (\n            <DraftOperationOrder\n              operationOrderListLength={props.renderData.renderOperationOrder.length}\n              draftOperationOrderListLength={\n                props.renderData.renderDraftOperationOrder.length\n              }\n              onDragend={onDragend}\n              workCenterGroup={props.workCenterGroup}\n              setWorkCenterGroup={props.setWorkCenterGroup}\n              filter={props.filter}\n              setFilter={props.setFilter}\n              secondFilter={props.secondFilter}\n              setSecondFilter={props.setSecondFilter}\n              renderDraftOperationOrder={props.renderData.renderDraftOperationOrder}\n              workCenterGroupModelList={props.renderData.workCenterGroupModelList}\n              partnerList={props.partnerList}\n              productList={props.productList}\n              searchTypeSelect={props.searchTypeSelect}\n              setSearchTypeSelect={props.setSearchTypeSelect}\n            />\n          )}\n          <div\n            id=\"cal_here\"\n            style={{ width: \"250px\", height: \"200px\", marginTop: 50 }}\n          ></div>\n        </div>\n        <div\n          id=\"scheduler_here\"\n          className=\"dhx_cal_container\"\n          style={{ width: \"100%\", height: \"900PX\" }}\n          onDrop={onDrop}\n          onDragOver={onDragOver}\n        >\n          <div className=\"dhx_cal_navline\">\n            <div className=\"prevButton\" onClick={prevOnClick}>\n              &nbsp;\n            </div>\n            <div className=\"nextButton\" onClick={nextOnClick}>\n              &nbsp;\n            </div>\n            <div className=\"dhx_cal_today_button\"></div>\n            <div className=\"dhx_cal_refresh_button\" onClick={refreshPage}>\n              {translate(\"Refresh\")}\n            </div>\n            <div className=\"dhx_cal_date\"></div>\n            <div className=\"dhx_cal_tab\" name=\"timeline_tab\"></div>\n            <div className=\"dhx_cal_tab\" name=\"week_timeline_tab\"></div>\n            <div className=\"dhx_cal_tab\" name=\"month_timeline_tab\"></div>\n          </div>\n          <div className=\"dhx_cal_header\"></div>\n          <div className=\"dhx_cal_data\"></div>\n        </div>\n      </div>\n      <ChangeDurationDialog open={changeDurationOpen} reason={reason} setReason={setReason} setChangeDurationOpen={setChangeDurationOpen} validateChangeDuration={validateChangeDuration}/>\n      <LoadingIndicator loading={props.loading}/>\n    </React.Fragment>\n  );\n}\n\nexport default compose(\n  withUrlParams,\n  withMachine,\n  withRenderOperation\n)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app/App';\nimport serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nserviceWorker();\n"],"sourceRoot":""}